<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="baseInfoRegistration">
    <select id="selectCoNo"  parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT 
			  CO_NO ,CO_NM ,CO_CL_CD ,HOSTING_CD ,REP_NM ,OPEN_DT ,UNUSE_FLG ,CO_REG_NO
	       		,POST_NO ,ADDR_NO1 ,ADDR_NO2 ,RPOST_NO ,RADDR_NO1 ,RADDR_NO2 ,BS_KIND ,GD_KIND
	        	,MAIN_GOODS_NM ,TEL_NO ,FAX_NO ,EMAIL ,MONTH_SALE_AMT ,FUND_AMT ,CO_GRADE
	        	,RECV_DT ,CONT_DT ,BS_KIND_CD ,CONT_NM ,CONT_TEL ,CONT_FAX ,CONT_CP ,CONT_EMAIL
	        	,SETT_NM ,SETT_TEL, SETT_EMAIL, CONT_ST_CD, CO_URL, RECV_CH_CD, ON_SVC_LST, MO_SVC_LST
	        	,PAY_FRSTFEE_TYPE, PAY_YEARFEE_TYPE, PAY_INSURE_TYPE, PAY_ADDSVC_TYPE, CONTDOC_RCV_FLG
	        	,DEPT_CD, CONT_EMP_NO, MGR1_EMP_NO, MGR2_EMP_NO, CSHRCPT_OPEN_DT, CSHRCPT_OPEN_TM, CSHRCPT_OPEN_CL
			FROM 
			  TB_CO
			WHERE 
			  CO_NO=#{CO_NO}
        ]]>
    </select>
    <select id="dupIdChk" parameterType="hashmap" resultType="integer">
    	<![CDATA[
    	SELECT 
    		COUNT(*)
    	FROM
    		TB_MBS
    	WHERE
    	]]>
    	<choose>
    		<when test="MID != null and MID != ''">
    			MID = #{MID}
    		</when>
    		<when test="GID  != null and GID  != ''">
    			GID = #{GID }
    		</when>
    		<otherwise>
    			VID = #{VID}
    		</otherwise>
    	</choose>
    </select>
    <select id="selectGidList" resultType="hashmap">
    <![CDATA[
    	SELECT GID FROM TB_GRP
    ]]>
    </select>
     <select id="selectGidInfo" parameterType="String" resultType="hashmap">
    	<![CDATA[
	    	SELECT 
	    		GID
				, G_NM
				, CO_NO
				, REG_DT
				, VGRP_NO
				, BANK_CD
				, VGRP_NM
				, REG_DT
				, EMP1_NM
				, EMP1_TEL
				, EMP1_CP
				, EMP1_EMAIL
				, EMP2_NM
				, EMP2_TEL
				, EMP2_CP
				, EMP2_EMAIL
	    	FROM
	    		TB_GRP
	    	WHERE
	    		GID = #{MER_ID}
    		]]>
    </select>
    <select id="selectVidList" resultType="hashmap">
    <![CDATA[
    	SELECT VID FROM TB_VGRP
    ]]>
    </select>
    <select id="selectVidInfo" parameterType="String" resultType="hashmap">
    	<![CDATA[
	    	SELECT A.VID, A.VGRP_NM, A.CO_NO, A.BANK_CD, A.ACCNT_NO, A.ACCNT_NO_ENC, A.ACCNT_NM, A.EMAIL, A.AGENT_CL_CD, A.STMT_CYCLE_CD, 
		      A.RSHARE_RATE, A.POST_NO, A.ADDR_NO1, A.ADDR_NO2, A.ADDR_CL, A.BS_KIND, A.GD_KIND, A.REP_NM,
		      B.CONT_NM, B.CONT_TEL, B.CONT_FAX, B.CONT_CP, B.CONT_EMAIL, B.SETT_NM, B.SETT_TEL, B.SETT_EMAIL,
		      C.TECH_EMP_NM, C.TECH_EMP_TEL, C.TECH_EMP_CP, C.TECH_EMP_EMAIL,USE_TYPE
		    FROM 
		    	TB_VGRP A
		    LEFT OUTER JOIN TB_CO B ON A.CO_NO = B.CO_NO     
		    LEFT OUTER JOIN TB_MBS C ON A.VID = C.VID
		    WHERE 
		    	A.VID=#{MER_ID}
	   		]]>
    </select>
    <select id="selectVidFeeInfo" parameterType="hashmap" resultType="hashmap">
    	<choose>
    		<when test=" frDt != null and frDt != '' ">
    		<![CDATA[
    			SELECT ID, PM_CD , CP_CD, USE_ST_TYPE
   			]]>
			</when>
    		<otherwise>
	    	<![CDATA[
		    	SELECT
		    		ID, PM_CD, SPM_CD, FR_AMT, TO_AMT, FR_DT, TO_DT, FEE_TYPE_CD, SHARE_RATE, CP_CD AS CP_CD_RE,
		      		CASE WHEN PM_CD = '02' AND FR_AMT = 1       THEN '01'
	           				  WHEN PM_CD = '02' AND FR_AMT = 11601   THEN '02'
		           			  WHEN PM_CD IN ('05', '06') THEN 
	               				CASE WHEN FR_AMT = 1 THEN '01'
		                		ELSE '02' END
		           			ELSE CP_CD
		      				END CP_CD,
		      		CASE WHEN FEE_TYPE_CD = 3    THEN TRUNC(FEE, 0)
		          	ELSE TRUNC(FEE, 2)
		      		END FEE, ETC_FEE
      		]]>		
    		</otherwise>
    	</choose>
    	<![CDATA[
    		FROM 
		      	TB_STMT_FEE
		    WHERE ID = #{MER_ID}
		    AND ID_CD = '3'
		    AND USE_ST_TYPE = '1'
		    AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
    	]]>
	</select>
	<update id="updateVidStmtFeeInfo" parameterType="hashmap">
	<![CDATA[
		UPDATE 
			TB_STMT_FEE
		SET
			FEE = #{fee}
			ETC_FEE = #{etcFee}
			SHARE_RATE = #{shareRate}
			WORKER = #{worker}
			USE_ST_TYPE = '0'
		WHERE ID=#{merId}
		AND ID_CD=#{idCl}
		AND USE_ST_TYPE =#{status}
		AND PM_CD=#{pmCd}
		AND FR_DT=#{frDt}
		AND FR_AMT=#{frAmt}
		AND CP_CD=#{cpCd}
		AND FEE_TYPE_CD=#{feeTypeCd}
	]]>
	</update>
    <insert id="insertBaseInfo" parameterType="hashmap">
        <![CDATA[
            INSERT INTO TB_MBS
			(
			  	MID
				,GID
				,VID
				,CO_NO
				,HOSTING_CD
				,USE_CL
				,TEL_NO
				,FAX_NO
				,EMAIL
				,CONT_DT
				,REG_DT
				,BS_KIND_CD
				,CONT_EMP_NM
				,CONT_EMP_TEL
				,CONT_EMP_FAX
				,CONT_EMP_HP
				,CONT_EMP_EMAIL
				,STMT_EMP_NM
				,STMT_EMP_TEL
				,STMT_EMP_FAX
				,STMT_EMP_CP
				,STMT_EMP_EMAIL
				,TECH_EMP_NM
				,TECH_EMP_TEL
				,TECH_EMP_FAX
				,TECH_EMP_CP
				,TECH_EMP_EMAIL
				,MBS_TYPE_CD
				,OM_SETT_CL
				,ACQ_CL_CD
				]]>
				<if test="ACQ_CL_CD==2">
				<![CDATA[
				,ACQ_DAY
				]]>
				</if>
				<![CDATA[
				,PAY_ID_CD
				,MALL_TYPE_CD
				,BANK_CD
				,SIGN_NM
				]]>
				<if test="AcctInfo1_1==0">
				<![CDATA[
				,ACCNT_NO
				,ACCNT_NO_ENC
				,ACCNT_NM
				]]>
				</if>
				<![CDATA[
				,AUTO_CAL_FLG
				,TAX_ISS_CD
				,CC_CHK_FLG
				,PUSH_PAY_CD
				,CARD_USE_CD
				,CARD_BLOCK_CD
				,MB_CARD_USE_CD
				,MB_CARD_BLOCK_CD
				,CARD_USE_POINT_CD
				,AUTH_TYPE
				,PAGE_LANG_TYPE
				,VBANK_NM
				,VBANK_BANK
				,CC_CL_CD
				,CC_PART_CL
				,PAY_NOTI_CD
				,RCPT_PRT_TYPE
				,ORD_NO_DUP_FLG
				,CSHRCPT_AUTO_FLG
				,VAT_MARK_FLG
				,VACCT_LMT_DAY
				,VACCT_ISS_TYPE
				,APP_VAN1_CD
				,APP_VAN2_CD
				,ACQ_VAN_CD
				,CAN_PW
				,CAN_PW_HIS1
				,CAN_PW_HIS2
				,CAN_PW_ID
				,CAN_CHG_DT
				,MID_URL
				,IMG_LOGO
				,PAY_LOGO
				,SLOGAN
				,LMT_INSTMN
				,RMLST_CARD_CD
				,ESCROW_USE_FLG
				,BILL_USE_CARD_CD
				,BILL_BLOCK_CARD_CD
				,BILL_LMT_INSTMN
				,BILL_TYPE
				,RECV_CH_CD
				,DEPT_CD
				,CONT_EMP_NO
				,MGR1_EMP_NO
				,MGR2_EMP_NO
				,ACCNT_RISK_GRADE 
				,SMS_PUSH_FLG
				,MBS_KEY_AUTH_FLG
				,MMS_PAY_FLG
				,WORKER
				,REG_DNT
			)
			  VALUES
			(
			 	#{MID}
				, #{GID}
				, #{VID}
				,#{CO_NO}
				, '0'
				, '0'
				, #{TEL_NO}
				, #{FAX_NO}
				, #{EMAIL}
				, #{CONT_DT}
				, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
				, #{bsKindCd}
				, #{CONT_EMP_NM}
				, #{CONT_EMP_TEL}
				, #{CONT_EMP_FAX}
				, #{CONT_EMP_HP}
				, #{CONT_EMP_EMAIL}
				, #{STMT_EMP_NM}
				, #{STMT_EMP_TEL}
				, #{STMT_EMP_FAX}
				, #{STMT_EMP_CP}
				, #{STMT_EMP_EMAIL}
				, #{TECH_EMP_NM}
				, #{TECH_EMP_TEL}
				, #{TECH_EMP_FAX}
				, #{TECH_EMP_CP}
				, #{TECH_EMP_EMAIL}
				, #{MBS_TYPE_CD}
				, #{OM_SETT_CL}
				, #{ACQ_CL_CD}
				]]>
				<if test="ACQ_CL_CD==2">
				<![CDATA[
				, #{ACQ_DAY}
				]]>
				</if>
				<![CDATA[
				, #{PAY_ID_CD}
				, #{MALL_TYPE_CD}
				, #{BANK_CD}
				, #{SIGN_NM}
				]]>
				<if test="AcctInfo1_1==0">
				<![CDATA[
				, #{ACCNT_NO}
				, #{ACCNT_NO_ENC}
				, #{ACCNT_NM}
				]]>
				</if>
				<![CDATA[
				, #{autoCancel}
				, #{TAX_ISS_CD}
				, #{CC_ChkFlg}
				, #{PUSH_PAY_CD}
				, #{CARD_USE_CD}
				, #{CARD_BLOCK_CD}
				, #{MB_CARD_USE_CD}
				, #{MB_CARD_BLOCK_CD}
				, #{CARD_USE_POINT_CD}
				, #{authType}
				, #{PAGE_LANG_TYPE}
				, #{VBANK_NM}
				, #{VBANK_BANK}
				, #{CC_CL_CD}
				, #{CC_PART_CL}
				, #{PAY_NOTI_CD}
				, #{RCPT_PRT_TYPE}
				, #{ORD_NO_DUP_FLG}
				, #{CSHRCPT_AUTO_FLG}
				, #{VAT_MARK_FLG}
				, #{VACCT_LMT_DAY}
				, #{VACCT_ISS_TYPE}
				, #{APP_VAN1_CD}
				, #{APP_VAN1_CD}
				, #{ACQ_VAN_CD}
				, #{CAN_PW}
				, #{CAN_PW_HIS1}
				, #{CAN_PW_HIS2}
				, #{CAN_PW_ID}
				, #{CAN_CHG_DT}
				, #{MID_URL}
				, #{IMG_LOGO}
				, #{PAY_LOGO}
				, #{SLOGAN}
				, #{LMT_INSTMN}
				, #{RMLST_CARD_CD}
				, #{ESCROW_USE_FLG}
				, #{BILL_USE_CARD_CD}
				, #{BILL_BLOCK_CARD_CD}
				, #{BILL_LMT_INSTMN}
				, #{BILL_TYPE}
				, #{RECV_CH_CD}
				, #{DEPT_CD}
				, #{CONT_EMP_NO}
				, #{MGR1_EMP_NO}
				, #{MGR2_EMP_NO}
				, #{ACCNT_RISK_GRADE} 
				, #{SMS_PUSH_FLG}
				, #{MBS_KEY_AUTH_FLG}
				, #{MMS_PAY_FLG}
				, #{WORKER}
				, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			)
        ]]>
    </insert>
    <select id="selectTodaySettPmInfo"  parameterType="hashmap" resultType="integer">
    	<![CDATA[
    		SELECT 
    			COUNT(*) 
    		FROM 
    			TB_STMT_SVC
    		WHERE
    			ID=#{mid}
    		AND 
    			PM_CD=#{pmCd}
    		AND 
    			STMT_SVC_CD=#{serviceCl}
    		AND 
    			FR_DT =DATE_FORMAT(NOW(), "%Y%m%d")
   			AND 
    			TO_DT ='99991231'	
    		AND 
    			USE_ST_TYPE = '0'
    	]]>
    </select>
    <update id="updateTodaySettInfo"  parameterType="hashmap" >
    	<![CDATA[
    		UPDATE 
    			TB_STMT_SVC
    		SET 
    			STMT_SVC_VALUE = #{serviceVal}
    			, UPD_DNT= DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
    		WHERE
    			ID=#{mid}
    		AND 
    			PM_CD=#{pmCd}
    		AND 
    			STMT_SVC_CD=#{serviceCl}
    		AND 
    			FR_DT =DATE_FORMAT(NOW(), "%Y%m%d")
   			AND 
    			TO_DT ='99991231'	
    		AND 
    			USE_ST_TYPE = '0'	
    	]]>
    </update>
    <update id="updateSettlmntPm"  parameterType="hashmap" >
    	<![CDATA[
    		UPDATE 
    			TB_STMT_SVC
    		SET 
    			TO_DT = DATE_FORMAT(DATE_ADD(NOW(), interval -1 day), "%Y%m%d")
    			, UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
    		WHERE
    			ID=#{mid}
    		AND 
    			STMT_SVC_CD=#{serviceCl}
   			AND 
    			TO_DT ='99991231'	
    		AND 
    			USE_ST_TYPE = '0'	
    	]]>
    </update>
    <insert id="insertSettlmntPm"  parameterType="hashmap" >
    <![CDATA[
    	INSERT INTO TB_STMT_SVC
   		(	
   			ID
			,ID_CD
			,PM_CD
			,SPM_CD
			,STMT_SVC_CD
			,STMT_SVC_VALUE
			,FR_DT
			,TO_DT
			,REG_DT
			,WORKER
			,REG_DNT
   		)
   		SELECT 
   			MID
   			, #{idCd}
   			, #{pmCd}
   			, '00'
   			, #{serviceCl} 
   			, #{serviceVal}
   			, DATE_FORMAT(NOW(), "%Y%m%d")
   			, '99991231'
   			, DATE_FORMAT(NOW(), "%Y%m%d")
   			, #{worker}
   			, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
		FROM 
			TB_MBS
		WHERE 
   			MID = #{mid}
    ]]>
    </insert>
    <!-- 사용 카드사 및 할부개월제한 반영-->
    <update id="updateCardInfo" parameterType="hashmap">
    	<![CDATA[
    		UPDATE 
    			TB_MBS A
    		SET
   		]]>
   		<if test="spmCd == 01">
   		<![CDATA[
   			CARD_USE_CD = #{cardUse}
   			, CARD_BLOCK_CD = #{cardBlock}
   			, LMT_INSTMN = #{limitInst}
   			, AUTH_TYPE = #{authFlg}
   		]]>
   		</if>
   		<![CDATA[
   			, UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   			WHERE MID = #{mid}
   		]]>
    </update>
    <!-- 카드 가맹점 정보 오늘자 카운트 -->
    <select id="selectTodayCardInfoCnt" parameterType="hashmap" resultType="integer"> 
    <![CDATA[
    	SELECT COUNT(1)
    	FROM TB_LNK_INFO
    	WHERE MID = #{mid}
    	AND CP_CD =#{cpCd}
    	AND MBS_NO =#{mbsNo}
    	AND PM_CD = #{pmCd}
    	AND SPM_CD =#{spmCd}
   /*    
    ]]>
    <choose>
    	<when test="pmCd == 05">
    	<![CDATA[
    		
    	]]>
    	</when>
    	<when test="pmCd ==  06">
    	<![CDATA[
    	
    	]]>
    	</when>
    	<when test=" pmCd == 11">
    	<![CDATA[
    	
    	]]>
    	</when>
    	<when test="pmCd ==  12">
    	<![CDATA[
    	
    	]]>
    	</when>
    	<otherwise></otherwise>
    </choose>
    <![CDATA[     */
    	AND FT_DT = DATE_FORMAT(NOW(), "%Y%m%d")
    ]]>
    </select>
    <!-- 카드 가맹점 정보 오늘자 data -->
    <select id="selectTodayCardInfo" parameterType="hashmap" resultType="hashmap"> 
    <![CDATA[
    	SELECT MBS_NO, TERM_NO
    	FROM TB_LNK_INFO
    	WHERE MID = #{mid}
    	AND CP_CD =#{cpCd}
    	AND CO_NO =#{coNo}
    	AND PM_CD = #{pmCd}
    	AND SPM_CD =#{spmCd}
    	AND FT_DT = DATE_FORMAT(NOW(), "%Y%m%d")
    	AND ROWNUM = 1
     	ORDER BY FT_DT DESC 
    ]]>
    </select>
    <!-- 제휴사 연동 정보 -->
    <update id="updateJoinInfo" parameterType="hashmap">
    <![CDATA[
    	UPDATE 
    		TB_LNK_INFO
   		SET
   		WORKER = #{worker}
   		,UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   	]]>
   	<if test="up_cl  == 0">
   	<![CDATA[
		,TO_DT = DATE_FORMAT(DATE_ADD(NOW(), interval -1 day), "%Y%m%d")
   	]]>
   	</if>
   	<if test="up_cl  == 1">
   		<![CDATA[
	    	,MBS_NO = #{mbsNo}	
	    	,TERM_NO = #{termNo}
    	]]>
   	</if>
	<![CDATA[       
		WHERE MID = #{mid}
    	AND CP_CD =#{cpCd}
    	AND MBS_NO =#{mbsNo}
    	AND PM_CD = #{pmCd}
    	AND SPM_CD =#{spmCd}
	]]>
	<choose>
		<when test="pmCd == 01">
		<![CDATA[
			AND TERM_NO = #{termNoOld}
		]]>
		</when>
		<when test="pmCd == 11">
			<if test=" termNoOld != null and termNoOld != '' ">
			<![CDATA[
				AND TERM NO = #{termNoOld}
			]]>
			</if>
		</when>
		<when test="pmCd == 12">
			<if test=" termNoOld != null and termNoOld != '' ">
			<![CDATA[
				AND TERM NO = #{termNoOld}
			]]>
			</if>
		</when>
	</choose>
	<if test="up_cl == 1 ">
	<![CDATA[
		AND FT_DT = DATE_FORMAT(NOW(), "%Y%m%d")
	]]>	
	</if>    	
    </update>
     <!-- 제휴사 연동 정보 INSERT -->
     <insert id="insertJoinInfo" parameterType="hashmap">
     <![CDATA[
     	INSERT INTO 
     		TB_LNK_INFO
   			(
   				MID
   				, CO_NO
   				, CP_CD
   				, PM_CD
   				, SPM_CD
   				, MBS_NO
   				, TERM_NO
   				/*    ]]>
   				<choose>
	   				<when test="pmCd  == 05">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 06">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 11">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 12">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<otherwise></otherwise>
   				</choose>
   				<![CDATA[  */
   				, FT_DT
   				, TO_DT
   				, REG_DT
   				, WORKER
   				, REG_DNT
   			) VALUES
   			(
   				#{mid}
   				,#{coNo}
   				,#{cpCd}
   				,#{pmCd}
   				,#{spmCd}
   				,#{mbsNo}
   				,#{termNo}
   				/*   ]]>
   				<choose>
	   				<when test="pmCd  == 05">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 06">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 11">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<when test="pmCd  == 12">
	   				<![CDATA[
	   				
	   				]]>
	   				</when>
	   				<otherwise></otherwise>
   				</choose>
   				<![CDATA[   */
   				, DATE_FORMAT(NOW(), "%Y%m%d")
   				, '99991231'
   				, DATE_FORMAT(NOW(), "%Y%m%d")
   				, #{worker}
   				, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   			)
     ]]>
     </insert>
     <select id="selectStmtCycleCnt"  parameterType="hashmap" resultType="integer">
     <![CDATA[
     	SELECT 
     		COUNT(1)
     	FROM 
     		TB_STMT_CYCLE
   		WHERE MID =#{mid}
   		AND PM_CD = #{pmCd}
   		AND SPM_CD = #{spmCd}
     ]]>
     </select>
     <!-- 정산 주기 데이터 -->
     <select id="selectStmtCycle"  parameterType="hashmap" resultType="String">
     <![CDATA[
     	SELECT 
     		STMT_CYCLE_CD
     	FROM 
     		TB_STMT_CYCLE
   		WHERE MID =#{mid}
   		AND PM_CD = #{pmCd}
   		AND SPM_CD = #{spmCd}
   		AND ROWNUM = 1
     	ORDER BY FR_DT DESC
     ]]>
     </select>
     <update id="updateStmtCycleInfo" parameterType="hashmap">
     <![CDATA[
     	UPDATE 
     		TB_STMT_CYCLE
     	SET
     		UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
     	]]>
     	<if test="up_cl == 0 ">
   		<![CDATA[
   			,TO_DT = DATE_FORMAT(DATE_ADD(NOW(), interval -1 day), "%Y%m%d")
   		]]>
   		</if>
   		<if test="up_cl == 1 ">
   		<![CDATA[
   			,STMT_CYCLE_CD = #{stmtCycle}
   			,STMT_TYPE = CASE WHEN COALESCE(#{stmtType}, '') = '' THEN '0' ELSE #{stmtType} END
   		]]>
   		</if>
	<![CDATA[
   		, WORKER = #{worker}
   		WHERE MID = #{mid}
   		AND PM_CD = #{pmCd}
   		AND SPM_CD =#{spmCd}
   		]]>
   		<if test="up_cl == 1 ">
		<![CDATA[
			--AND FR_DT = DATE_FORMAT(NOW(), "%Y%m%d")
		]]>	
		</if>    	
    </update>
    <insert id="insertStmtCycleInfo" parameterType="hashmap">
    <![CDATA[
    	INSERT INTO TB_STMT_CYCLE
    	(
    		MID
    		, PM_CD
    		, SPM_CD
    		, FR_DT
    		, TO_DT
    		, STMT_TYPE
			, STMT_CYCLE_CD
			, WORKER
			, REG_DNT
    		
    	)
    	VALUES
    	(
    		#{mid}
    		, #{pmCd}
    		, #{spmCd}
    		, DATE_FORMAT(NOW(), "%Y%m%d")
    		, '99991231'
    		, CASE WHEN COALESCE(#{stmtType}, '') = '' THEN '0' ELSE #{stmtType} END
    		, #{stmtCycle}
    		, #{worker}
    		, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
    	)
	]]>
     </insert>
     <select id="selectMerPmInfo" parameterType="hashmap" resultType="String">
     <![CDATA[
     	SELECT 
     		USE_FLG 
   		FROM 
   			TB_MBS_PM 
		WHERE MID=#{mid} 
		AND PM_CD=#{pmCd} 
		AND SPM_CD = #{spmCd} 
		AND ROWNUM = 1 
		ORDER BY USE_DT DESC
     ]]>
     </select>
     <update id="updateMerPmInfo" parameterType="hashmap">
     <![CDATA[
     	UPDATE  
     		TB_MBS_PM
   		SET
   			USE_FLG = #{useCl}
   			, WORKER = #{worker}
   			, UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   		WHERE  MID = #{mid}
   		AND PM_CD = #{pmCd}
   		AND SPM_CD = #{spmCd} 
     ]]>
     </update>
     <insert id="insertMerPmInfo" parameterType="hashmap">
     <![CDATA[
     	INSERT INTO 
     		TB_MBS_PM
   			(
   				MID
   				, PM_CD
   				, SPM_CD
   				, USE_FLG
   				, USE_DT
   				, INFO_FLG
   				, WORKER
   				, REG_DNT
   			)
   			VALUES
   			(
   				#{mid}
   				, #{pmCd}
   				, #{spmCd}
   				, #{useCl}
   				, DATE_FORMAT(NOW(), "%Y%m%d")
   				, 'Y'
   				, #{worker}
   				, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   			)
     ]]>
     </insert>
    <update id="updateNormalInfo" parameterType="hashmap">
        <![CDATA[
            UPDATE TB_MBS
			SET
				UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			]]>
			<if test="TEL_NO != null and TEL_NO != ''">
            <![CDATA[
				, TEL_NO = #{TEL_NO}
				]]>
			</if>
			<if test="FAX_NO != null and FAX_NO != ''">
            <![CDATA[	
				, FAX_NO = #{FAX_NO}
				]]>
			</if>
			<if test="EMAIL != null and EMAIL != ''">
            <![CDATA[
				, EMAIL = #{EMAIL}
				]]>
			</if>
			<if test="CONT_DT != null and CONT_DT != ''">
            <![CDATA[
				, CONT_DT = #{CONT_DT}
				]]>
			</if>
			<if test="BS_KIND_CD != null and BS_KIND_CD != ''">
            <![CDATA[
				, BS_KIND_CD = #{bsKindCd}
				]]>
			</if>
			<if test="CONT_EMP_NM != null and CONT_EMP_NM != ''">
            <![CDATA[
				, CONT_EMP_NM = #{CONT_EMP_NM}
				]]>
			</if>
			<if test="CONT_EMP_TEL != null and CONT_EMP_TEL != ''">
            <![CDATA[
				, CONT_EMP_TEL = #{CONT_EMP_TEL}
				]]>
			</if>
			<if test="CONT_EMP_HP != null and CONT_EMP_HP != ''">
            <![CDATA[
				, CONT_EMP_HP = #{CONT_EMP_HP}
				]]>
			</if>
			<if test="CONT_EMP_EMAIL != null and CONT_EMP_EMAIL != ''">
            <![CDATA[
				, CONT_EMP_EMAIL = #{CONT_EMP_EMAIL}
				]]>
			</if>
			<if test="STMT_EMP_NM != null and STMT_EMP_NM != ''">
            <![CDATA[
				, STMT_EMP_NM = #{STMT_EMP_NM}
				]]>
			</if>
			<if test="STMT_EMP_TEL != null and STMT_EMP_TEL != ''">
            <![CDATA[
				, STMT_EMP_TEL = #{STMT_EMP_TEL}
				]]>
			</if>
			<if test="STMT_EMP_CP != null and STMT_EMP_CP != ''">
            <![CDATA[
				, STMT_EMP_CP = #{STMT_EMP_CP}
				]]>
			</if>
			<if test="STMT_EMP_EMAIL != null and STMT_EMP_EMAIL != ''">
            <![CDATA[
				, STMT_EMP_EMAIL = #{STMT_EMP_EMAIL}
				]]>
			</if>
			<if test="TECH_EMP_NM != null and TECH_EMP_NM != ''">
            <![CDATA[
				, TECH_EMP_NM = #{TECH_EMP_NM}
				]]>
			</if>
			<if test="TECH_EMP_TEL != null and TECH_EMP_TEL != ''">
            <![CDATA[
				, TECH_EMP_TEL = #{TECH_EMP_TEL}
				]]>
			</if>
			<if test="TECH_EMP_CP != null and TECH_EMP_CP != ''">
            <![CDATA[
				, TECH_EMP_CP = #{TECH_EMP_CP}
				]]>
			</if>
			<if test="TECH_EMP_EMAIL != null and TECH_EMP_EMAIL != ''">
            <![CDATA[
				, TECH_EMP_EMAIL = #{TECH_EMP_EMAIL}
				]]>
			</if>
			<if test="MBS_TYPE_CD != null and MBS_TYPE_CD != ''">
            <![CDATA[
				, MBS_TYPE_CD = #{MBS_TYPE_CD}
				]]>
			</if>
			<if test="OM_SETT_CL != null and OM_SETT_CL != ''">
            <![CDATA[
				, OM_SETT_CL = #{OM_SETT_CL}
				]]>
			</if>
			<if test="MALL_TYPE_CD != null and MALL_TYPE_CD != ''">
            <![CDATA[
				, MALL_TYPE_CD = #{MALL_TYPE_CD}
				]]>
			</if>
			<if test="RECV_CH_CD != null and RECV_CH_CD != ''">
            <![CDATA[
				, RECV_CH_CD =#{RECV_CH_CD}
				]]>
			</if>
			<if test="ACCNT_RISK_GRADE != null and ACCNT_RISK_GRADE != ''">
            <![CDATA[
				, ACCNT_RISK_GRADE =#{ACCNT_RISK_GRADE}
			]]>
			</if>
			<![CDATA[
			 WHERE
			 	MID = #{MID}
        ]]>
    </update>
    <update id="updateEtcInfo" parameterType="hashmap">
        <![CDATA[
            UPDATE TB_MBS
			SET
				UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			]]>
			<if test="CSHRCPT_AUTO_FLG != null and CSHRCPT_AUTO_FLG != ''">
            <![CDATA[
				, CSHRCPT_AUTO_FLG = #{CSHRCPT_AUTO_FLG}
				]]>
			</if>
			<if test="PAY_NOTI_CD != null and PAY_NOTI_CD != ''">
            <![CDATA[	
				, PAY_NOTI_CD = #{PAY_NOTI_CD}
				]]>
			</if>
			<if test="RCPT_PRT_TYPE != null and RCPT_PRT_TYPE != ''">
            <![CDATA[
				, RCPT_PRT_TYPE = #{RCPT_PRT_TYPE}
				]]>
			</if>
			<if test="VAT_MARK_FLG != null and VAT_MARK_FLG != ''">
            <![CDATA[
				, VAT_MARK_FLG = #{VAT_MARK_FLG}
				]]>
			</if>
			<if test="VACCT_LMT_DAY != null and VACCT_LMT_DAY != ''">
            <![CDATA[
				, VACCT_LMT_DAY = #{VACCT_LMT_DAY}
				]]>
			</if>
			<if test="VACCT_ISS_TYPE != null and VACCT_ISS_TYPE != ''">
            <![CDATA[
				, VACCT_ISS_TYPE = #{VACCT_ISS_TYPE}
				]]>
			</if>
			<if test="ESCROW_USE_FLG != null and ESCROW_USE_FLG != ''">
            <![CDATA[
				, ESCROW_USE_FLG = #{ESCROW_USE_FLG}
				]]>
			</if>
			<if test="APP_VAN1_CD != null and APP_VAN1_CD != ''">
            <![CDATA[
				, APP_VAN1_CD = #{APP_VAN1_CD}
				]]>
			</if>
			<if test="ACQ_VAN_CD != null and ACQ_VAN_CD != ''">
            <![CDATA[
				, ACQ_VAN_CD = #{ACQ_VAN_CD}
				]]>
			</if>
			<if test="PUSH_PAY_CD != null and PUSH_PAY_CD != ''">
            <![CDATA[
				, PUSH_PAY_CD = #{PUSH_PAY_CD}
				]]>
			</if>
			<if test="SMS_PUSH_FLG != null and SMS_PUSH_FLG != ''">
            <![CDATA[
				, SMS_PUSH_FLG = #{SMS_PUSH_FLG}
				]]>
			</if>
			<if test="MBS_KEY_AUTH_FLG != null and MBS_KEY_AUTH_FLG != ''">
            <![CDATA[
				, MBS_KEY_AUTH_FLG = #{MBS_KEY_AUTH_FLG}
				]]>
			</if>
			<if test="MMS_PAY_FLG != null and MMS_PAY_FLG != ''">
            <![CDATA[
				, MMS_PAY_FLG = #{MMS_PAY_FLG}
				]]>
			</if>
			<if test="ORD_NO_DUP_FLG != null and ORD_NO_DUP_FLG != ''">
            <![CDATA[
				, ORD_NO_DUP_FLG = #{ORD_NO_DUP_FLG}
				]]>
			</if>
			<![CDATA[
			 WHERE
			 	MID = #{MID}
        ]]>
    </update>
    <update id="updateSettleInfo" parameterType="hashmap">
        <![CDATA[
            UPDATE TB_MBS
			SET
				UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			]]>
			<if test="ACQ_CL_CD != null and ACQ_CL_CD != ''">
            <![CDATA[
				, ACQ_CL_CD = #{ACQ_CL_CD}
				]]>
			</if>
			<if test="ACQ_CL_CD==2">
				<if test="ACQ_DAY != null and ACQ_DAY != ''">
	            <![CDATA[
					, ACQ_DAY = #{ACQ_DAY}
					]]>
				</if>
			</if>
			<if test="PAY_ID_CD != null and PAY_ID_CD != ''">
            <![CDATA[
				, PAY_ID_CD = #{PAY_ID_CD}
				]]>
			</if>
			<if test="CC_CL_CD != null and CC_CL_CD != ''">
            <![CDATA[
				, CC_CL_CD = #{CC_CL_CD}
				]]>
			</if>
			<if test="CC_PART_CL != null and CC_PART_CL != ''">
            <![CDATA[
				, CC_PART_CL = #{CC_PART_CL}
				]]>
			</if>
			<if test="AUTO_CAL_FLG != null and AUTO_CAL_FLG != ''">
            <![CDATA[
				, AUTO_CAL_FLG = #{AUTO_CAL_FLG}
				]]>
			</if>
			<if test="bankCd!= null and bankCd!= ''">
            <![CDATA[
				, BANK_CD = #{bankCd}
				]]>
			</if>
			<if test="ACCNT_NO != null and ACCNT_NO != ''">
            <![CDATA[
				, ACCNT_NO = #{ACCNT_NO}
				]]>
			</if>
			<if test="ACCNT_NM != null and ACCNT_NM != ''">
            <![CDATA[
				, ACCNT_NM = #{ACCNT_NM}
				]]>
			</if>
			<![CDATA[
			 WHERE
			 	MID = #{MID}
        ]]>
        </update>
        <update id="updatePayType" parameterType="hashmap">
        <![CDATA[
            UPDATE TB_MBS
			SET
				UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			]]>
			<if test="AUTH_TYPE != null and AUTH_TYPE != ''">
            <![CDATA[
				, AUTH_TYPE = #{authType}
				]]>
			</if>
			<if test="LMT_INSTMN != null and LMT_INSTMN != ''">
            <![CDATA[
				,LMT_INSTMN = #{LMT_INSTMN}
				]]>
			</if>
			<![CDATA[
		 	WHERE
				MID = #{MID}
       	 ]]>
        </update>
        <update id="updateCardMbs" parameterType="hashmap">
        <![CDATA[
            UPDATE TB_CARD_MBS
			SET
				UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			]]>
			<if test="AUTH_TYPE != null and AUTH_TYPE != ''">
            <![CDATA[
				, AUTH_TYPE = #{authType}
				]]>
			</if>
			<if test="LMT_INSTMN != null and LMT_INSTMN != ''">
            <![CDATA[
				LMT_INSTMN = #{LMT_INSTMN}
				]]>
			</if>
			<![CDATA[
			,	UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
		 	WHERE
				MID = #{MID}
        ]]>
        </update>
	<select id="selectCardPay"  parameterType="hashmap" resultType="hashmap">
	 <![CDATA[
		SELECT 
		  A.PM_CD , A.MBS_NO, A.SPM_CD, A.CP_CD, A.TERM_NO, B.CARD_CD, COALESCE(B.AUTH_TYPE_CD,'00') as AUTH_TYPE_CD
	  	FROM 
		  TB_LNK_INFO A, TB_CARD_MBS B 
		WHERE 
			A.MBS_NO = B.MBS_NO
		AND 
			A.PM_CD='01'
		AND
      		A.MID = #{MID}
	]]>	
	</select>
	<select id="selectBaseInfoAll"  parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
	            A.MID, A.GID, A.VID, A.CO_NO, C.CO_NM, C.CO_CL_CD, C.HOSTING_CD, C.REP_NM, A.USE_CL, CASE WHEN A.USE_CL = '0' THEN '사용' WHEN A.USE_CL = '1' THEN '중지' ELSE '해지' END USE_NM
	            , C.POST_NO, C.ADDR_NO1, C.ADDR_NO2, C.RPOST_NO, C.RADDR_NO1, C.RADDR_NO2, C.BS_KIND, C.GD_KIND, A.ORD_NO_DUP_FLG
	            , B.REG_DT, B.G_NM, B.VGRP_NO, B.VGRP_NM, B.EMP1_NM, B.EMP1_TEL, B.EMP1_CP, B.EMP1_EMAIL, B.EMP2_NM, B.EMP2_TEL, B.EMP2_CP, B.EMP2_EMAIL
	            , V.VGRP_NM V_NM, V.REP_NM VREP_NM, V.BS_KIND V_BS_KIND, V.GD_KIND V_GD_KIND, V.EMAIL V_EMAIL, V.ACCNT_NO V_ACCT_NO, V.ACCNT_NM V_ACCT_NM
	            , V.STMT_CYCLE_CD, V.RSHARE_RATE, V.BANK_CD, (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0038' AND CODE1=V.STMT_CYCLE_CD) V_SETTLE_CYCLE
	            , V.POST_NO V_POST_NO, V.ADDR_NO1 V_ADDR1, V.ADDR_NO2 V_ADDR2
	            , C.MAIN_GOODS_NM, A.TEL_NO, A.FAX_NO, A.EMAIL, C.CO_GRADE, A.CONT_DT, A.BS_KIND_CD, A.MBS_TYPE_CD, A.ACQ_CL_CD, A.ACQ_DAY, A.PAY_ID_CD, A.MALL_TYPE_CD, A.OM_SETT_CL
	            , A.TAX_ISS_CD, A.LMT_FLG, A.CARD_USE_CD, A.CARD_BLOCK_CD, A.CC_CL_CD, A.CC_PART_CL, A.CC_CHK_FLG, CASE WHEN COALESCE(A.CC_CHK_FLG, '0') = '0' THEN '미적용' ELSE '적용' END CC_CHK_NM
	            , A.PAY_NOTI_CD, A.CSHRCT_SND_TYPE, A.RCPT_PRT_TYPE, a.CSHRCPT_AUTO_FLG, A.CONT_DT
	            , a.AUTO_CAL_FLG, A.CAN_PW, A.MID_URL, A.PAY_LOGO, A.SLOGAN, A.DEPT_CD, A.CONT_EMP_NO, A.MGR1_EMP_NO, A.MGR2_EMP_NO
	            , A.CONT_EMP_NM, A.CONT_EMP_TEL, A.CONT_EMP_HP, A.CONT_EMP_EMAIL
	            , CASE WHEN A.VAT_MARK_FLG = '1' AND A.VAT_SEPARATE_FLG = '0' THEN '1'
	                  		WHEN A.VAT_MARK_FLG = '0' AND A.VAT_SEPARATE_FLG = '0' THEN '0'
	                   		END AS VAT_MARK_FLG
	             , A.VACCT_LMT_DAY, A.VACCT_ISS_TYPE, A.AUTH_TYPE
	             , A.TECH_EMP_NM, A.TECH_EMP_TEL, A.TECH_EMP_CP, A.TECH_EMP_EMAIL
	             , A.STMT_EMP_NM, A.STMT_EMP_TEL, A.STMT_EMP_CP, A.STMT_EMP_EMAIL
	             , A.BANK_CD,  (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0001' AND CODE1=A.BANK_CD) AS BANK_NM
	             , A.ACCNT_NO, A.ACCNT_NO_ENC
	             , CONCAT(SUBSTR(A.ACCNT_NO, 1, 5), '*****') AS ACCNT_NO1
	             , A.ACCNT_NM, A.SIGN_NM 
	             , CASE WHEN C.CO_CL_CD = '0' THEN '미설정' ELSE (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0011' AND CODE1=C.CO_CL_CD) END AS CO_CL_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0014' AND CODE1=A.MALL_TYPE_CD) AS MALL_TYPE_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0012' AND CODE1=A.MBS_TYPE_CD) AS MBS_TYPE_NM
	             , CASE WHEN A.CSHRCPT_AUTO_FLG = '0' THEN '자동발급' ELSE '수동발급' END CSHRCPT_AUTO_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0017' AND CODE1=A.PAY_NOTI_CD) PAY_NOTI_NM
	             , CASE WHEN A.RCPT_PRT_TYPE = '0' THEN '발행' WHEN A.RCPT_PRT_TYPE = '1' THEN '미발행' ELSE '영수증(거래확인서)' END RCPT_PRT_NM
	             , CASE WHEN A.VAT_MARK_FLG = '0' THEN '표시' ELSE '미표시' END VAT_MARK_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0017' AND CODE1=A.ACQ_CL_CD) ACQ_CL_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0008' AND CODE1=A.PAY_ID_CD) PAY_ID_NM
	             , (SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0016' AND CODE1=A.CC_CL_CD) CC_CL_NM
	             , CASE WHEN A.AUTO_CAL_FLG = '0' THEN '미적용' ELSE '적용' END AUTO_CAL_NM
	             , CASE WHEN A.VACCT_ISS_TYPE = '1' THEN 'random' ELSE 'bulk' END VACCT_TYPE_NM
	             , CASE WHEN A.AUTH_TYPE = '0' THEN '일반'
	                  WHEN A.AUTH_TYPE = '1' THEN 'KeyIn'
	                  WHEN A.AUTH_TYPE = '2' THEN '빌링'    
	                  END AUTH_TYPE_NM
	             , A.APP_VAN1_CD, A.APP_VAN2_CD, A.ACQ_VAN_CD, A.ESCROW_USE_FLG 
	             , CASE WHEN COALESCE(A.ESCROW_USE_FLG, '0') = '0' THEN '미사용' ELSE '사 용' END ESCROW_NM
	             , COALESCE((SELECT DISTINCT DESC2 FROM TB_CODE WHERE COL_NM = 'VAN_CARD_CD' AND CODE1 = A.APP_VAN1_CD), '미설정') APP_VAN1_NM --???
	             , COALESCE((SELECT DISTINCT DESC2 FROM TB_CODE WHERE COL_NM = 'VAN_CARD_CD' AND CODE1 = A.APP_VAN2_CD), '미설정') APP_VAN2_NM
	             , COALESCE((SELECT DISTINCT DESC2 FROM TB_CODE WHERE COL_NM = 'ACQ_CARD_CD' AND CODE1 = A.ACQ_VAN_CD), '미설정') ACQ_VAN_NM
	             , A.SALES_PAY_FLG, CASE WHEN COALESCE(a.SALES_PAY_FLG, '0') = '0' THEN '불가능' ELSE '가능' END SALES_PAY_NM
	             , A.LMT_INSTMN, A.LMT_INSTMN_MB, A.BILL_LMT_INSTMN
	             , A.OM_SETT_CL, CASE WHEN A.OM_SETT_CL = '0' THEN '미적용' ELSE '적용' END OM_SETT_NM
	             , (SELECT U.EMP_NM FROM TB_EMP U WHERE U.EMP_NM = C.CONT_EMP_NO) CONT_EMP_NM
	             , (SELECT U.EMP_NM FROM TB_EMP U WHERE U.EMP_NM = C.MGR1_EMP_NO) MGR1_EMP_NM
	             , (SELECT U.EMP_NM FROM TB_EMP U WHERE U.EMP_NM = C.MGR2_EMP_NO) MGR2_EMP_NM
	             , A.BILL_TYPE, A.SAFE_BILL_TYPE, A.BILLREQ_CERT_FLG
	             , A.CP_SLIDING_TYPE, A.RECV_CH_CD
	             , COALESCE((SELECT DISTINCT DESC1 FROM TB_CODE WHERE CODE_CL='0007' AND CODE1=A.RECV_CH_CD),'미설정') RECV_CH_NM
	             , A.SMS_PUSH_FLG, A.ACCNT_RISK_GRADE, A.MBS_KEY_AUTH_FLG
	             , COALESCE(SUBSTR(COALESCE(A.CC_PART_CL,'000'),1,1),'0') CC_PART_CARD
	             , COALESCE(SUBSTR(COALESCE(A.CC_PART_CL,'000'),2,1),'0') CC_PART_ACCT
	             , COALESCE(SUBSTR(COALESCE(A.CC_PART_CL,'000'),3,1),'0') CC_PART_VACCT
	             , A.CC_PART_CL, A.MMS_PAY_FLG, A.AUTO_CANCEL_FLG
	             , CASE WHEN A.AUTO_CANCEL_FLG = '1' THEN '사용안함' ELSE '사용' END AS AUTO_CANCEL_NM
	             , CASE WHEN C.PAY_YEARFEE_TYPE = '00' THEN '미설정' 
	                    WHEN C.PAY_YEARFEE_TYPE = '01' THEN '면제' 
	                    WHEN C.PAY_YEARFEE_TYPE = '02' THEN '대상'
	                    WHEN C.PAY_YEARFEE_TYPE = '99' THEN '납부' 
	                    ELSE '' END AS PAY_YEARFEE_NM
	             , A.REG_DNT, A.WORKER
	      	FROM TB_MBS A
	      	LEFT OUTER JOIN TB_GRP B ON A.GID = B.GID
	      	LEFT OUTER JOIN TB_VGRP V ON A.VID = V.VID
	   		LEFT OUTER JOIN TB_CO C ON B.CO_NO = C.CO_NO
		  	]]>
		    <if  test="MER_VAL == 0" >
            <![CDATA[
				WHERE A.MID=#{MER_ID}
				]]>
			</if>
			<if  test="MER_VAL == 1" >
            <![CDATA[
				WHERE A.GID=#{MER_ID}
				]]>
			</if>
			<if  test="MER_VAL == 2" >
            <![CDATA[
				WHERE A.VID=#{MER_ID}
				]]>
			</if>
	</select>
	<select id="selectApproList"  parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT * FROM 
			(
				SELECT 
					ROWNUM AS RNUM, B.CO_NO, C.CO_NM, B.MID ID, A.PM_CD, A.SPM_CD, A.FEE_TYPE_CD, BEF.FEE_TYPE_CD AS BEFORE_FEE_TYPE, COALESCE(BEF.AVG_FEE, '0') AS BEFORE_AVG_FEE, 
				  (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0022' AND CODE1=A.PM_CD) AS PM_NM,
				  CASE WHEN A.FEE_TYPE_CD = 3 THEN TRUNC(A.FEE,0) ELSE TRUNC(A.FEE,2) END AFTER_AVG_FEE, A.FR_DT, 
				  CASE WHEN A.FR_DT < DATE_FORMAT(NOW(), "%Y%m%d") THEN '1' ELSE A.USE_ST_TYPE END AS STATUS,
				  CASE WHEN A.FR_DT < DATE_FORMAT(NOW(), "%Y%m%d") THEN '승인기간만료' ELSE '승인대기중' END AS STATUS_NM, A.FR_AMT, A.CP_CD, A.REG_DNT
				  FROM TB_STMT_FEE A
				  LEFT OUTER JOIN TB_MBS B ON A.ID = B.MID 
	       		  LEFT OUTER JOIN TB_CODE CD ON A.CP_CD = CD.CODE1 and CD.CODE_CL= '0002' and CD.USE_FLG = '0'
				  LEFT OUTER JOIN TB_CO C ON B.CO_NO = C.CO_NO
				  LEFT OUTER JOIN
				  (
					    SELECT A.ID, A.PM_CD, A.SPM_CD, A.FEE_TYPE_CD, A.CP_CD, 
					     CASE WHEN A.FEE_TYPE_CD = 3 THEN TRUNC(A.FEE,0) ELSE TRUNC(A.FEE,2) END AVG_FEE, A.FR_AMT
					    FROM (
					     SELECT ID, PM_CD, SPM_CD, CP_CD, FEE_TYPE_CD, FEE, FR_AMT
					     FROM TB_STMT_FEE
					     WHERE ID_CD = '1'
					     AND USE_ST_TYPE = '1'
					     AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
				     ]]>
				     <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
				     <![CDATA[
				     	AND ID = #{MER_SEARCH_TEXT}
				     ]]>
				     </if>
				     <![CDATA[
				     	GROUP BY ID, PM_CD, SPM_CD, CP_CD, fee_type_CD,FEE, FR_AMT	
				     ) A
				   ) BEF
				   ON A.ID = BEF.ID 
				   AND A.PM_CD = BEF.PM_CD 
				   AND A.SPM_CD = BEF.SPM_CD 
				   AND A.FR_AMT = BEF.FR_AMT
				   AND A.CP_CD = BEF.CP_CD
				   AND CASE WHEN A.PM_CD = '02' THEN A.FEE_TYPE_CD ELSE '1' END = CASE WHEN A.PM_CD = '02' THEN BEF.FEE_TYPE_CD ELSE '1' END
				   WHERE A.ID_CD = '1'  
				   AND A.USE_ST_TYPE = '0'   
				   ]]>
			       <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
			       <![CDATA[
			     	AND A.ID = #{MER_SEARCH_TEXT}
			     	]]>
			     	</if>
			     	<![CDATA[
				   ORDER BY FR_DT
			   ) TBL
			   WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
			   ]]>
	</select>
	<select id="selectApproListTotal"  parameterType="hashmap" resultType="Integer">
		<![CDATA[
			SELECT COUNT(1)
			  FROM TB_STMT_FEE A
			  LEFT OUTER JOIN TB_MBS B ON A.ID = B.MID 
       		  LEFT OUTER JOIN TB_CODE CD ON A.CP_CD = CD.CODE1 and CD.CODE_CL= '0002' and CD.USE_FLG = '0'
			  LEFT OUTER JOIN TB_CO C ON B.CO_NO = C.CO_NO
			  LEFT OUTER JOIN
			  (
				    SELECT A.ID, A.PM_CD, A.SPM_CD, A.FEE_TYPE_CD, A.CP_CD, 
				     CASE WHEN A.FEE_TYPE_CD = 3 THEN TRUNC(A.FEE,0) ELSE TRUNC(A.FEE,2) END AVG_FEE, A.FR_AMT
				    FROM (
				     SELECT ID, PM_CD, SPM_CD, CP_CD, FEE_TYPE_CD, FEE, FR_AMT
				     FROM TB_STMT_FEE
				     WHERE ID_CD = '1'
				     AND USE_ST_TYPE = '1'
				     AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
			     ]]>
			     <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
			     <![CDATA[
			     	AND ID = #{MER_SEARCH_TEXT}
			     ]]>
			     </if>
			     <![CDATA[
			     	GROUP BY ID, PM_CD, SPM_CD, CP_CD, fee_type_CD,FEE, FR_AMT	
			     ) A
			   ) BEF
			   ON A.ID = BEF.ID 
			   AND A.PM_CD = BEF.PM_CD 
			   AND A.SPM_CD = BEF.SPM_CD 
			   AND A.FR_AMT = BEF.FR_AMT
			   AND A.CP_CD = BEF.CP_CD
			   AND CASE WHEN A.PM_CD = '02' THEN A.FEE_TYPE_CD ELSE '1' END = CASE WHEN A.PM_CD = '02' THEN BEF.FEE_TYPE_CD ELSE '1' END
			   WHERE A.ID_CD = '1'  
			   AND A.USE_ST_TYPE = '0'   
			   ]]>
		       <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
		       <![CDATA[
		     	AND A.ID = #{MER_SEARCH_TEXT}
		     	]]>
		     	</if>
	</select>
	<select id="selectVidApproList"  parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			  SELECT * FROM 
			  (
				  SELECT 
					  ROWNUM AS RNUM,B.CO_NO, B.ACCNT_NM, B.VGRP_NM AS CO_NM, B.VID ID, A.PM_CD, A.SPM_CD,
				      COALESCE((SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0022' AND CODE1=A.PM_CD), A.PM_CD) PM_NM, A.CP_CD,
				      A.FEE_TYPE_CD, C.FEE_TYPE_CD AS BEFORE_FEE_TYPE, C.AVG_FEE BEFORE_AVG_FEE, AVG(A.FEE) AFTER_AVG_FEE, A.FR_DT, 
				      CASE WHEN A.FR_DT < DATE_FORMAT(NOW(), "%Y%m%d") THEN '2' ELSE A.USE_ST_TYPE END AS STATUS, A.FR_AMT,
				      COALESCE(C.AVG_ETC_FEE,0) BEFORE_ETC_FEE, TRUNC(AVG(A.ETC_FEE),0) AFTER_ETC_FEE
				  FROM TB_STMT_FEE A
				  LEFT OUTER JOIN TB_VGRP B ON A.ID = B.VID 
				  LEFT OUTER JOIN
				  (
					 SELECT 
					 	ID, PM_CD, FEE_TYPE_CD, AVG(FEE) AVG_FEE, FR_AMT, TRUNC(AVG(ETC_FEE),0) AVG_ETC_FEE, CP_CD
			         FROM 
			         	TB_STMT_FEE
			         WHERE ID_CD = '3'
			         AND USE_ST_TYPE = '1'
			         AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
				     ]]>
				     <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
				     <![CDATA[
				     	AND ID = #{MER_SEARCH_TEXT}
				     ]]>
				     </if>
				     <![CDATA[
				     	GROUP BY  ID, PM_CD, FEE_TYPE_CD, FR_AMT, CP_CD	
			       ) C
				   ON A.ID = C.ID 
			       AND A.PM_CD = C.PM_CD 
			       AND A.FEE_TYPE_CD = C.FEE_TYPE_CD 
			       AND A.CP_CD = C.CP_CD 
				   WHERE A.ID_CD = '3'  
				   AND A.USE_ST_TYPE = '1'  /*   0 으로 다시 수정할 것   */
			   ]]>
		       <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
		       <![CDATA[
		     		AND A.ID = #{MER_SEARCH_TEXT}
		     	]]>
		     	</if>
		     	<![CDATA[
				    GROUP BY  ROWNUM, B.CO_NO, B.ACCNT_NM, B.VGRP_NM , B.VID, A.PM_CD, A.SPM_CD,
		   			A.CP_CD,A.FEE_TYPE_CD, C.FEE_TYPE_CD, A.FR_DT,C.AVG_FEE,A.USE_ST_TYPE,A.FR_AMT,C.AVG_ETC_FEE
	   			) TBL
	   			WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
		   ]]>
	</select>
	<select id="selectVidApproListTotal"  parameterType="hashmap" resultType="Integer">
		<![CDATA[
			  SELECT 
				  COUNT(1)
			  FROM TB_STMT_FEE A
			  LEFT OUTER JOIN TB_VGRP B ON A.ID = B.VID 
			  LEFT OUTER JOIN
			  (
				 SELECT 
				 	ID, PM_CD, FEE_TYPE_CD, AVG(FEE) AVG_FEE, FR_AMT, TRUNC(AVG(ETC_FEE),0) AVG_ETC_FEE, CP_CD
		         FROM 
		         	TB_STMT_FEE
		         WHERE ID_CD = '3'
		         AND USE_ST_TYPE = '1'
		         AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
			     ]]>
			     <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
			     <![CDATA[
			     	AND ID = #{MER_SEARCH_TEXT}
			     ]]>
			     </if>
			     <![CDATA[
			     	GROUP BY  ID, PM_CD, FEE_TYPE_CD, FR_AMT, CP_CD	
		       ) C
			   ON A.ID = C.ID 
		       AND A.PM_CD = C.PM_CD 
		       AND A.FEE_TYPE_CD = C.FEE_TYPE_CD 
		       AND A.CP_CD = C.CP_CD 
			   WHERE A.ID_CD = '3'  
			   AND A.USE_ST_TYPE = '1'  /*   0 으로 다시 수정할 것   */
		   ]]>
	       <if test="MER_SEARCH_TEXT != null and MER_SEARCH_TEXT !=''">
	       <![CDATA[
	     		AND A.ID = #{MER_SEARCH_TEXT}
	     	]]>
	     	</if>
	</select>
	<select id="selectEmpInfo" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
				DISTINCT EMP_NO, EMP_NM
		    FROM 
		    	TB_EMP
		    WHERE 1 = 1
		    ]]>
		    <choose>
               <when test="DEPT_CD != all">
               	<![CDATA[
				    AND DEPT_CD = #{dept_cd}
			    ]]>
               </when>
               <when test="DEPT_CD == 01">
               	<![CDATA[
				    AND SUBSTR(SETT_AUTH_FLG, 1,1) = '1'
			    ]]>
               </when>
               <otherwise>
               </otherwise>
            </choose>
		    <if  test="PART_CD != all" >
            <![CDATA[
		    AND PART_CD = #{part_cd}
		    ]]>
		    </if>
		    <if  test="DUTY_CD != all" >
            <![CDATA[
		    AND DUTY_CD = #{duty_cd}
		    ]]>
		    </if>
		    <if  test="APP_AUTH_TYPE != all" >
            <![CDATA[
		    AND APP_AUTH_TYPE = #{appAuthType}
		    ]]>
		    </if>
		    <if  test="ST_TYPE != all" >
            <![CDATA[
		    AND ST_TYPE = #{stType}
		    ]]>
		    </if>
	</select>
	<insert id="insertGidRegist" parameterType="hashmap">
		 <![CDATA[
			 INSERT INTO TB_GRP
			(
			  GID, G_NM, CO_NO, VGRP_NO, BANK_CD
			  , VGRP_NM, REG_DT, WORKER, REG_DNT
			  , EMP1_NM, EMP1_TEL, EMP1_CP, EMP1_EMAIL
			  , EMP2_NM, EMP2_TEL, EMP2_CP, EMP2_EMAIL
			)
			VALUES 
			(
			  #{GID}, #{gNm}, #{co_no}, #{vaNo}, #{bankCd}
			  , #{vaNm}, #{issuDt}, #{WORKER}, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			  , #{contNm1}, #{contTel1}, #{contCp1}, #{contEmail1}
			  , #{contNm2}, #{contTel2}, #{contCp2}, #{contEmail2}
			)
			]]>
	</insert>
	<update id="updateGidInfo" parameterType="hashmap">
		 <![CDATA[
			UPDATE 
				TB_GRP
			SET
				UPD_DNT  = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			 ]]>
		    <if  test="gNm != null and gNm !='' " >
            <![CDATA[
				, G_NM = #{gNm}
			 ]]>
		    </if>
		    <if  test="co_no != null and co_no !='' " >
            <![CDATA[
				, CO_NO = #{co_no}
			 ]]>
		    </if>
		    <if  test="vaNo != null and vaNo !='' " >
            <![CDATA[
				, VGRP_NO  = #{vaNo}
			 ]]>
		    </if>
		    <if  test="bankCd != null and bankCd !='' " >
            <![CDATA[
				, BANK_CD  = #{bankCd}
			 ]]>
		    </if>
		    <if  test="vaNm != null and vaNm !='' " >
            <![CDATA[
			  	, VGRP_NM  = #{vaNm}
		  	 ]]>
		    </if>
		    <if  test="issuDt != null and issuDt !='' " >
            <![CDATA[
			  	, REG_DT  = #{issuDt}
		  	 ]]>
		    </if>
		    <if  test="WORKER != null and WORKER !='' " >
            <![CDATA[
			  	, WORKER  = #{WORKER}
		  	 ]]>
		    </if>
		    <if  test="contNm1 != null and contNm1 !='' " >
            <![CDATA[
			  	, EMP1_NM  = #{contNm1}
		  	 ]]>
		    </if>
		    <if  test="contTel1 != null and contTel1 !='' " >
            <![CDATA[
			  	, EMP1_TEL  = #{contTel1}
		  	 ]]>
		    </if>
		    <if  test="contCp1 != null and contCp1 !='' " >
            <![CDATA[
			  	, EMP1_CP = #{contCp1}
		  	 ]]>
		    </if>
		    <if  test="contEmail1 != null and contEmail1 !='' " >
            <![CDATA[
			  	, EMP1_EMAIL = #{contEmail1}
		  	 ]]>
		    </if>
		    <if  test="contNm2 != null and contNm2 !='' " >
            <![CDATA[
			  	, EMP2_NM = #{contNm2}
		  	 ]]>
		    </if>
		    <if  test="contTel2 != null and contTel2 !='' " >
            <![CDATA[
			  	, EMP2_TEL = #{contTel2}
		  	 ]]>
		    </if>
		    <if  test="contCp2 != null and contCp2 !='' " >
            <![CDATA[
			  	, EMP2_CP = #{contCp2}
		  	 ]]>
		    </if>
		    <if  test="contEmail2 != null and contEmail2 !='' " >
            <![CDATA[
			  	, EMP2_EMAIL = #{contEmail2}
		  	 ]]>
		    </if>
            <![CDATA[
		  	WHERE 
		  		GID = #{GID}
	  	]]>
	</update>
	<insert id="insertVidRegist" parameterType="hashmap">
		 <![CDATA[
			 INSERT INTO TB_VGRP
			(
				VID, VGRP_NM, CO_NO, REP_NM, ACCNT_NO
				, BANK_CD, ACCNT_NM, REG_DNT
				, POST_NO, ADDR_NO1, ADDR_NO2
				, BS_KIND, GD_KIND, EMAIL
				, STMT_CYCLE_CD, RSHARE_RATE, WORKER
			)
			VALUES
			(
				#{VID}, #{vNm}, #{coNo}, #{repNm}, #{vaNo}
				, #{bankCd}, #{vaNm}, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
				, #{Address1}, #{Address2}, #{Address3}
				, #{bsKind}, #{gdKind}, #{email}
				, #{settleCycle}, #{rsRate}, #{WORKER}
				
			)
			]]>
	</insert>
	<update id="updateVidInfo" parameterType="hashmap">
		 <![CDATA[
			UPDATE 
				TB_VGRP
			SET
			  	UPD_DNT  = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			  	 ]]>
		    <if  test="vNm != null and vNm !='' " >
            <![CDATA[
				, VGRP_NM = #{vNm}
			 ]]>
		    </if>
		    <if  test="coNo != null and coNo !='' " >
            <![CDATA[
				, CO_NO = #{coNo}
			 ]]>
		    </if>
		    <if  test="repNm != null and repNm !='' " >
            <![CDATA[
				, REP_NM  = #{repNm}
			 ]]>
		    </if>
		    <if  test="vaNo != null and vaNo !='' " >
            <![CDATA[
			  	, ACCNT_NO  = #{vaNo}
		  	 ]]>
		    </if>
		    <if  test="bankCd != null and bankCd !='' " >
            <![CDATA[
				, BANK_CD  = #{bankCd}
			 ]]>
		    </if>
		    <if  test="vaNm != null and vaNm !='' " >
            <![CDATA[
			  	, ACCNT_NM  = #{vaNm}
		  	 ]]>
		    </if>
		    <if  test="WORKER != null and WORKER !='' " >
            <![CDATA[
			  	, WORKER  = #{WORKER}
		  	 ]]>
		    </if>
		    <if  test="Address1 != null and Address1 !='' " >
            <![CDATA[
			  	, POST_NO  = #{Address1}
		  	 ]]>
		    </if>
		    <if  test="Address2 != null and Address2 !='' " >
            <![CDATA[
			  	, ADDR_NO1  = #{Address2}
		  	 ]]>
		    </if>
		    <if  test="Address3 != null and Address3 !='' " >
            <![CDATA[
			  	, ADDR_NO2 = #{Address3}
		  	 ]]>
		    </if>
		    <if  test="bsKind != null and bsKind !='' " >
            <![CDATA[
			  	, BS_KIND = #{bsKind}
		  	 ]]>
		    </if>
		    <if  test="gdKind != null and gdKind !='' " >
            <![CDATA[
			  	, GD_KIND = #{gdKind}
		  	 ]]>
		    </if>
		    <if  test="email != null and email !='' " >
            <![CDATA[
			  	, EMAIL = #{email}
		  	 ]]>
		    </if>
		    <if  test="settleCycle != null and settleCycle !='' " >
            <![CDATA[
			  	, STMT_CYCLE_CD = #{settleCycle}
		  	 ]]>
		    </if>
		    <if  test="rsRate != null and rsRate !='' " >
            <![CDATA[
			  	, RSHARE_RATE = #{rsRate}
		  	 ]]>
		    </if>
            <![CDATA[
		  	WHERE
		  		VID = #{VID}
	  	]]>
	</update>
	<select id="selectExistChk" parameterType="hashmap" resultType="integer">
	<![CDATA[
		SELECT 
			COUNT(1)
		FROM 
			TB_MBS
		WHERE 
			MID=#{MID}
	]]>
	</select>
	<select id="selectGidExistChk" parameterType="hashmap" resultType="integer">
	<![CDATA[
		SELECT 
			COUNT(1)
		FROM 
			TB_GRP
		WHERE 
			GID=#{GID}
	]]>
	</select>
	<select id="selectVidExistChk" parameterType="hashmap" resultType="integer">
	<![CDATA[
		SELECT 
			COUNT(1)
		FROM 
			TB_VGRP 
		WHERE 
			VID=#{VID}
	]]>
	</select>
	<insert id="insertMerKey" parameterType="hashmap">
	<![CDATA[
		INSERT INTO 
			TB_MBS_KEY
			(
				MID
				, MKEY
				, CREATE_DT
			)
			VALUES
			(
				#{MID}
				, #{merKey}
				, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			)
	]]>
	</insert>
	<insert id="insertVIDSettlmntFeeInfo" parameterType="hashmap">
	<![CDATA[
		INSERT INTO TB_STMT_FEE
		(
			ID
			,ID_CD
			,PM_CD
			,SPM_CD
			,CP_CD
			,FR_DT
			,TO_DT
			,FEE_TYPE_CD
			,FEE
			,FR_AMT
			,TO_AMT
			,ETC_FEE
			,REG_DNT
			,USE_ST_TYPE
			,WORKER
			,SHARE_RATE				
		)
		VALUES
		(
			#{id}
			,#{idCd}
			,#{pmCd}
			,#{spmCd}
			,#{cpCd}
		]]>
		<if test="frDt == toDay">
		<![CDATA[
			,DATE_FORMAT(NOW(), "%Y%m%d")
		]]>
		</if>
		<if test="frDt != toDay">
		<![CDATA[
			,#{frDt}
		]]>
		</if>
		<![CDATA[
			,'99991231'
			,#{feeTypeCd}
			,#{fee}
			,#{frAmt}
			,CASE WHEN #{pmCd} = '02' 
						AND #{frAmt} = 1 
						AND #{spmCd} != '05' 
						THEN 11600
						ELSE 99999999999999 END
			,#{etcFee}
			, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			,#{status}
			,#{worker}
			,#{shareRate}
		)
	]]>
	</insert>
	<update id="updateVIDSettlmntFeeInfo" parameterType="hashmap">
	<![CDATA[
		UPDATE TB_STMT_FEE
		SET
			FEE =#{fee}
			ETC_FEE =#{etcFee}
			SHARE_RATE =#{shareRate}
			WORKER =#{worker}
			USE_ST_TYPE='0'
		WHERE ID=#{id}
		AND ID_CD=#{idCd}
		AND USE_ST_TYPE=#{status}
		AND PM_CD=#{pmCd}
		AND FR_DT=#{frDt}
		AND FR_AMT=#{frAmt}
		AND CP_CD=#{cpCd}
		AND FEE_TYPE_CD=#{feeTypeCd}
	]]>
	</update>
	<select  id="selectMerchantFeeRegCnt" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT CP_CD
	    FROM 
	    	TB_STMT_FEE
	    LEFT OUTER JOIN 
	    	TB_CODE CD 
	    	ON CP_CD = CD.CODE1 
	    	AND CD.CODE_CL = '0002'
	    	AND CD.USE_FLG = '0'
	    WHERE ID = #{id}
	    AND ID_CD = '1'
	    AND PM_CD = #{pmCd}
	    AND SPM_CD = #{spmCd}
	    AND CP_CD IN 
	    (
	      SELECT CP_CD
	      FROM TB_STMT_FEE
	      WHERE ID = #{id}
	      AND ID_CD = '1'
	      AND PM_CD = #{pmCd}
	      AND SPM_CD = #{spmCd}
	      AND FR_DT = #{frDt}
	   AND FEE_TYPE_CD = #{feeTypeCd}
	      AND USE_ST_TYPE = '0'
	    )
	    AND FEE_TYPE_CD = #{feeTypeCd}
	    AND USE_ST_TYPE = '1'
	    AND TO_DT = '99991231'
	]]>
	<if test="pmCd==01">
		<if test="overCl == 99">
		<![CDATA[
			AND (CD,CODE2 = 'over' OR CD_CODE1 = '38')
		]]>
		</if>
		<if test="overCl == 00">
		<![CDATA[
			AND (CD,CODE2 != 'over' OR CD_CODE1 != '38')
		]]>
		</if>
	</if>
	</select>
	<select id="selectAfterFeeRegCnt" parameterType="hashmap" resultType="integer">
	<![CDATA[
		SELECT COUNT(1) 
		FROM TB_STMT_FEE
		WHERE 1=1
		]]>
		<if test="idCl == 'MID'">
		<![CDATA[
			AND ID = #{id]
		]]>
		</if>
		<if test="idCl == 'VID'"> 
		<![CDATA[
			AND ID = #{id]
		]]>
		</if>
		<![CDATA[
		AND PM_CD = #{pmCd}
		AND SPM_CD =#{spmCd}
		AND CP_CD IN (#{cp_cd_lst})
		]]>
		<if test="pmCd==02"> 
		<![CDATA[
			AND FEE_TYPE_CD = #{feeTypeCd]
		]]>
		</if>
		<![CDATA[
		AND USE_ST_TYPE = '1'
		AND #{frDt} < FR_DT
	]]>
	</select>
	<update id="updateMerchantFeeReg" parameterType="hashmap" >
	<![CDATA[
		  UPDATE TB_STMT_FEE A
	      SET
	        A.USE_ST_TYPE = #{status}
	        , A.WORKER = #{worker}
	        ]]>
	        <if test="status == 1">
	        <![CDATA[
	        	, TO_DT = '99991231'
	        ]]>
	        </if>
        <![CDATA[
		WHERE A.ID = #{id}	
		AND A. ID_CD= '1'
		AND A.PM_CD = #{pmCd}
		AND A.SPM_CD= #{spmCd}
		AND A.FR_DT = #{frDt}
      	AND A.FEE_TYPE_CD = #{feeTypeCd}
      	]]>
      	<if test="pmCd==02">
      	<![CDATA[
      		A.CP_CD = #{cpCd}
      	]]>
      	</if>
      	<if test="pmCd==01">
			<if test="overCl == 99">
			<![CDATA[
				AND (CD,CODE2 = 'over' OR CD_CODE1 = '38')
			]]>
			</if>
			<if test="overCl == 00">
			<![CDATA[
				AND (CD,CODE2 != 'over' OR CD_CODE1 != '38')
			]]>
			</if>
		</if>
      	<![CDATA[
      	AND A.USE_ST_TYPE = '0'
      	AND (SELECT CODE1 FROM TB_CODE CD WHERE A.CP_CD=CODE1 AND CODE_CL = '0002' AND USE_FLG = '0') = CP_CD
	]]>
	</update>
	<update id="updateMerchantFeeRegBefore" parameterType="hashmap" >
	<![CDATA[
		UPDATE TB_STMT_FEE
		SET
			TO_DT = #{frDt}
			,WORKER = #{worker}
		WHERE
			ID = #{id}	
		AND ID_CD= #{idCl}
		AND PM_CD = #{pmCd}
		AND SPM_CD= #{spmCd}
		AND CP_CD IN (#{cpCd})	
		AND USE_ST_TYPE = '1'
		AND FR_AMT = #{ftAmt}
		AND TO_DT = '99991231'
	]]>
	</update>
	<select id="selectVIDMerchantFeeRegCnt" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT CP_CD
	    FROM TB_STMT_FEE
	    WHERE ID = #{id}
	    AND ID_CD = '3'
	    AND PM_CD = #{pmCd}
	    AND SPM_CD = #{spmCd}
	    AND CP_CD IN 
	    (
	    
	    SELECT CP_CD
	      FROM TB_STMT_FEE
	      WHERE ID = #{id}
	      AND ID_CD = '3'
	      AND PM_CD = #{pmCd}
	      AND SPM_CD = #{spmCd}
	      AND FR_DT = #{frDt}
	   	  AND FEE_TYPE_CD = #{feeTypeCd}
	      AND USE_ST_TYPE = '0'
	    )
	    AND FEE_TYPE_CD = #{feeTypeCd}
	    AND USE_ST_TYPE = '1'
	    AND TO_DT = '99991231'
	]]>
	</select>
	<update id="updateVIDMerchantFeeRegBefore" parameterType="hashmap">
	<![CDATA[
		 UPDATE TB_STMT_FEE
	      SET
	        TO_DT = #{frDt},
	        WORKER = #{worker}
	      WHERE ID = #{id}
	      AND ID_CD = '3'
	      AND PM_CD = #{pmCd}
	      AND SPM_CD = #{spmCd}
	      AND CP_CD IN (#{cd_cd_lst})
	      AND FEE_TYPE_CD = #{feeTypeCd}
	      AND USE_ST_TYPE = '1'
	      AND FR_AMT = #{frAmt}
	      AND TO_DT = '99991231'
	]]>
	</update>
	<update id="updateVIDMerchantFeeReg" parameterType="hashmap">
	<![CDATA[
		 UPDATE TB_STMT_FEE
	      SET
	        TO_DT = #{frDt},
	        WORKER = #{worker}
	      WHERE ID = #{id}
	      AND ID_CD = '3'
	      AND PM_CD = #{pmCd}
	      AND SPM_CD = #{spmCd}
	      AND CP_CD =#{cpCd}
	      AND FR_DT =#{frDt}
	      AND FEE_TYPE_CD = #{feeTypeCd}
	      AND FR_AMT = #{frAmt}
	      AND USE_ST_TYPE = '0'
	]]>
	</update>
	<select id="selectFeeRegLst" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		 SELECT
		 	 ID, ID_CD, CP_CD, PM_CD, SPM_CD, FR_DT, FR_AMT, TO_AMT, FEE_TYPE_CD,
	     CASE WHEN 
	     	FEE_TYPE_CD = '3' 
   			THEN TRUNC(FEE, 0) ELSE TRUNC(FEE, 2) 
   			END FEE
	     FROM TB_STMT_FEE
	     WHERE ID = #{id}
	     AND ID_CD = #{idCd}
	     AND USE_ST_TYPE = #{status}
	     AND FR_DT = #{frDt}
	     AND PM_CD = #{pmCd}
	     AND SPM_CD = #{spmCd}
	]]>
	</select>
	<update id="updateStmtFeeInfo" parameterType="hashmap">
	<![CDATA[
		UPDATE TB_STMT_FEE
		SET
			FEE = #{fee}
			, USE_ST_TYPE = #{status}
			, WORKER = #{worker}
		WHERE ID = #{id}
	      AND ID_CD = #{idCd}
	      AND PM_CD = #{pmCd}
	      AND SPM_CD = #{spmCd}
	      AND CP_CD =#{cpCd}
	      AND FR_DT =#{frDt}
	      AND FR_AMT = #{frAmt}
	      AND FEE_TYPE_CD = #{feeTypeCd}
	]]>
	</update>
	<insert id="insertMidInfo" parameterType="hashmap">
	 <![CDATA[
	      INSERT INTO 
	        TB_MBS
	        ( 
	          MID, CO_NO,GID, VID, MID_URL, USE_CL, TEL_NO, FAX_NO,
	          CONT_EMP_NM, CONT_EMP_TEL, CONT_EMP_HP, CONT_EMP_EMAIL,
	          STMT_EMP_NM, STMT_EMP_TEL, STMT_EMP_CP, STMT_EMP_EMAIL,
	          TECH_EMP_NM, TECH_EMP_TEL, TECH_EMP_CP, TECH_EMP_EMAIL,
	          EMAIL, CONT_EMP_NO, MGR1_EMP_NO, 
	          MBS_TYPE_CD, OM_SETT_CL, MALL_TYPE_CD, 
	          CONT_DT, REG_DNT, BS_KIND_CD, RECV_CH_CD,
	          WORKER, ACCNT_RISK_GRADE , PAY_ID_CD, SIGN_NM, MMS_PAY_FLG,
	          APP_VAN1_CD, APP_VAN2_CD, ACQ_VAN_CD
	      )
	      VALUES
	      (
	        #{MID}, #{CO_NO}, #{GID}, #{VID},#{URL},'0',#{TEL_NO},#{FAX_NO},
	        #{CONT_EMP_NM},#{CONT_EMP_TEL}, #{CONT_EMP_CP},#{CONT_EMP_EMAIL},
	        #{STMT_EMP_NM},#{STMT_EMP_TEL},#{STMT_EMP_CP},#{STMT_EMP_EMAIL},
	        #{TECH_EMP_NM},#{TECH_EMP_TEL},#{TECH_EMP_CP},#{TECH_EMP_EMAIL},
	        #{EMAIL}, #{CONT_EMP_NO},#{MALL_TYPE_CD},
	        #{MBS_TYPE_CD},#{OM_SETT_CL},#{CompanyType},
	        #{CONT_DT},DATE_FORMAT(NOW(), "%Y%m%d%H%i%s"),#{bsKindCd},#{RECV_CH_CD},
	        #{WORKER},#{ACCNT_RISK_GRADE},#{PAY_ID_CD},#{SIGN_NM},#{MMS_PAY_FLG},
	        '04','04','04'
	      )
      ]]>
	</insert>
</mapper>