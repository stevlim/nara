<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="newContractMgmt">

    <insert id="insertCoInfo" parameterType="hashmap">
        <![CDATA[
            INSERT INTO TB_CO
			(
				CO_NO
				,RECV_DT
			]]>
			<if test="coNm!=''"><![CDATA[ ,CO_NM ]]></if>
			<if test="repNm!=''"><![CDATA[ ,REP_NM ]]></if>
			<if test="openDt!=''"><![CDATA[ ,OPEN_DT ]]></if>
			<if test="address1!=''"><![CDATA[ ,POST_NO ]]></if>
			<if test="address2!=''"><![CDATA[ ,ADDR_NO1 ]]></if>
			<if test="address3!=''"><![CDATA[ ,ADDR_NO2 ]]></if>
			<if test="address4!=''"><![CDATA[ ,RPOST_NO ]]></if>
			<if test="address5!=''"><![CDATA[ ,RADDR_NO1 ]]></if>
			<if test="address6!=''"><![CDATA[ ,RADDR_NO2 ]]></if>
			<if test="bsKind!=''"><![CDATA[ ,BS_KIND ]]></if>
			<if test="gdKind!=''"><![CDATA[ ,GD_KIND ]]></if>
			<if test="telNo!=''"><![CDATA[ ,TEL_NO ]]></if>
			<if test="faxNo!=''"><![CDATA[ ,FAX_NO ]]></if>
			<if test="email!=''"><![CDATA[ ,EMAIL ]]></if>
			<if test="startMoney!=''"><![CDATA[ ,FUND_AMT ]]></if>
			<if test="contDt!=''"><![CDATA[ ,CONT_DT ]]></if>
			<if test="contNm!=''"><![CDATA[ ,CONT_NM ]]></if>
			<if test="contTel!=''"><![CDATA[ ,CONT_TEL ]]></if>
			<if test="contCp!=''"><![CDATA[ ,CONT_CP ]]></if>
			<if test="contEmail!=''"><![CDATA[ ,CONT_EMAIL ]]></if>
			<if test="settNm!=''"><![CDATA[ ,SETT_NM ]]></if>
			<if test="settTel!=''"><![CDATA[ ,SETT_TEL ]]></if>
			<if test="settEmail!=''"><![CDATA[ ,SETT_EMAIL ]]></if>
			<if test="status!='' "><![CDATA[ ,CONT_ST_CD ]]></if>
			<if test="url!=''"><![CDATA[ ,CO_URL ]]></if>
			<if test="contRoute!=''"><![CDATA[ ,RECV_CH_CD ]]></if>
			<if test="ON_SVC_LST!=''"><![CDATA[ ,ON_SVC_LST ]]></if>
			<if test="registMoney!=''"><![CDATA[ ,PAY_FRSTFEE_TYPE ]]></if>
			<if test="yMoney!=''"><![CDATA[ ,PAY_YEARFEE_TYPE ]]></if>
			<if test="contFlg!=''"><![CDATA[ ,CONTDOC_RCV_FLG ]]></if>
			<if test="contManager!=''"><![CDATA[ ,CONT_EMP_NO ]]></if>
			<if test="salesManager!=''"><![CDATA[ ,MGR1_EMP_NO ]]></if>
			<if test="worker!=''"><![CDATA[ ,WORKER ]]></if>
			<![CDATA[
				,REG_DNT
			)
			  VALUES
			(
			  #{coNo}
			  ,#{registDt}
			]]>
		  	<if test="coNm!=''"><![CDATA[ ,#{coNm} ]]></if>
			<if test="repNm!=''"><![CDATA[ ,#{repNm} ]]></if>
			<if test="openDt!=''"><![CDATA[ ,#{openDt} ]]></if>
			<if test="address1!=''"><![CDATA[ ,#{address1} ]]></if>
			<if test="address2!=''"><![CDATA[ ,#{address2} ]]></if>
			<if test="address3!=''"><![CDATA[ ,#{address3} ]]></if>
			<if test="address4!=''"><![CDATA[ ,#{address4} ]]></if>
			<if test="address5!=''"><![CDATA[ ,#{address5} ]]></if>
			<if test="address6!=''"><![CDATA[ ,#{address6} ]]></if>
			<if test="bsKind!=''"><![CDATA[ ,#{bsKind} ]]></if>
			<if test="gdKind!=''"><![CDATA[ ,#{gdKind} ]]></if>
			<if test="telNo!=''"><![CDATA[ ,#{telNo} ]]></if>
			<if test="faxNo!=''"><![CDATA[ ,#{faxNo} ]]></if>
			<if test="email!=''"><![CDATA[ ,#{email} ]]></if>
			<if test="startMoney!=''"><![CDATA[ ,${startMoney} ]]></if>
			<if test="contDt!=''"><![CDATA[ ,#{contDt} ]]></if>
			<if test="contNm!=''"><![CDATA[ ,#{contNm} ]]></if>
			<if test="contTel!=''"><![CDATA[ ,#{contTel} ]]></if>
			<if test="contCp!=''"><![CDATA[ ,#{contCp} ]]></if>
			<if test="contEmail!=''"><![CDATA[ ,#{contEmail} ]]></if>
			<if test="settNm!=''"><![CDATA[ ,#{settNm} ]]></if>
			<if test="settTel!=''"><![CDATA[ ,#{settTel} ]]></if>
			<if test="settEmail!=''"><![CDATA[ ,#{contEmail} ]]></if>
			<if test="status!=''"><![CDATA[ ,#{status} ]]></if>
			<if test="url!=''"><![CDATA[ ,#{url} ]]></if>
			<if test="contRoute!=''"><![CDATA[ ,#{contRoute} ]]></if>
			<if test="ON_SVC_LST!=''"><![CDATA[ ,#{ON_SVC_LST} ]]></if>
			<if test="registMoney!=''"><![CDATA[ ,#{registMoney} ]]></if>
			<if test="yMoney!=''"><![CDATA[ ,#{yMoney} ]]></if>
			<if test="contFlg!=''"><![CDATA[ ,#{contFlg} ]]></if>
			<if test="contManager!=''"><![CDATA[ ,#{contManager} ]]></if>
			<if test="salesManager!=''"><![CDATA[ ,#{salesManager} ]]></if>
			<if test="worker!=''"><![CDATA[ ,#{worker} ]]></if>
			<![CDATA[
			  ,DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
			)
        ]]>
        <selectKey resultType="integer" keyProperty="id">
        <![CDATA[
    		SELECT COUNT(CO_NO) AS ID FROM TB_CO WHERE CO_NO = #{coNo}
   		]]>
		</selectKey>
    </insert>
     <!-- update co info -->
    <update id="updateCoInfo" parameterType="hashmap">
    <![CDATA[
    	UPDATE TB_CO
    	SET
    		UPD_DNT =DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
    		]]>
    		<if test="coNm!=''"><![CDATA[ ,CO_NM  = #{coNm}]]></if>
			<if test="repNm!=''"><![CDATA[ ,REP_NM = #{repNm}]]></if>
			<if test="openDt!=''"><![CDATA[ ,OPEN_DT = #{openDt}]]></if>
			<if test="address1!=''"><![CDATA[ ,POST_NO = #{address1}]]></if>
			<if test="address2!=''"><![CDATA[ ,ADDR_NO1 = #{address2}]]></if>
			<if test="address3!=''"><![CDATA[ ,ADDR_NO2 = #{address3}]]></if>
			<if test="address4!=''"><![CDATA[ ,RPOST_NO = #{address4}]]></if>
			<if test="address5!=''"><![CDATA[ ,RADDR_NO1 = #{address5}]]></if>
			<if test="address6!=''"><![CDATA[ ,RADDR_NO2 = #{address6}]]></if>
			<if test="bsKind!=''"><![CDATA[ ,BS_KIND = #{bsKind}]]></if>
			<if test="gdKind!=''"><![CDATA[ ,GD_KIND = #{gdKind}]]></if>
			<if test="telNo!=''"><![CDATA[ ,TEL_NO = #{telNo}]]></if>
			<if test="faxNo!=''"><![CDATA[ ,FAX_NO = #{faxNo}]]></if>
			<if test="email!=''"><![CDATA[ ,EMAIL = #{email}]]></if>
			<if test="startMoney!=''"><![CDATA[ ,FUND_AMT = #{startMoney}]]></if>
			<if test="contDt!=''"><![CDATA[ ,CONT_DT = #{contDt}]]></if>
			<if test="contNm!=''"><![CDATA[ ,CONT_NM = #{contNm}]]></if>
			<if test="contTel!=''"><![CDATA[ ,CONT_TEL = #{contTel}]]></if>
			<if test="contCp!=''"><![CDATA[ ,CONT_CP = #{contCp}]]></if>
			<if test="contEmail!=''"><![CDATA[ ,CONT_EMAIL = #{contEmail}]]></if>
			<if test="settNm!=''"><![CDATA[ ,SETT_NM = #{settNm}]]></if>
			<if test="settTel!=''"><![CDATA[ ,SETT_TEL = #{settTel}]]></if>
			<if test="settEmail!=''"><![CDATA[ ,SETT_EMAIL = #{settEmail}]]></if>
			<if test="status!='' "><![CDATA[ ,CONT_ST_CD = #{status}]]></if>
			<if test="url!=''"><![CDATA[ ,CO_URL = #{url}]]></if>
			<if test="contRoute!=''"><![CDATA[ ,RECV_CH_CD = #{contRoute}]]></if>
			<if test="ON_SVC_LST!=''"><![CDATA[ ,ON_SVC_LST = #{ON_SVC_LST}]]></if>
			<if test="registMoney!=''"><![CDATA[ ,PAY_FRSTFEE_TYPE= #{registMoney} ]]></if>
			<if test="yMoney!=''"><![CDATA[ ,PAY_YEARFEE_TYPE= #{yMoney} ]]></if>
			<if test="contFlg!=''"><![CDATA[ ,CONTDOC_RCV_FLG= #{contFlg} ]]></if>
			<if test="contManager!=''"><![CDATA[ ,CONT_EMP_NO = #{contManager}]]></if>
			<if test="salesManager!=''"><![CDATA[ ,MGR1_EMP_NO= #{salesManager} ]]></if>
			<if test="worker!=''"><![CDATA[ ,WORKER= #{worker} ]]></if>
		<![CDATA[
			WHERE CO_NO=#{coNo}
		]]>
    </update>
    <select id="selectPayStatus" parameterType="hashmap" resultType="String">
    <![CDATA[
    	SELECT CASE WHEN A.STATUS IS NULL THEN 'N' WHEN A.STATUS = '0' THEN 'P' ELSE 'E' END AS STATUS_FLG
	    FROM (
	      SELECT MIN(PAY_ST_TYPE) STATUS
	      FROM TB_CO_PAY
	      WHERE ID_CD ='1'
	      AND ID = #{coNo}
	      AND PAY_CD = #{payCd}
	      AND DEL_FLG = '0'
	      ) A
    ]]>
    </select>
    <!--	 입금 이력 정보를 수정한다.   -->
    <update id="updatePayment" parameterType="hashmap">
    <![CDATA[
    	UPDATE TB_CO_PAY
	     SET REQ_AMT  = CASE WHEN ${payAmt} = 0 THEN 0 ELSE ${payAmt} END
	     , EXP_FLG = CASE WHEN ${payAmt} = '0' THEN '1' ELSE '0' END
	     , WORKER = #{worker}
	     , REG_DT = DATE_FORMAT(NOW(), "%Y%m%d")
	     , UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	   WHERE ID_CD = '1'
       AND ID = #{coNo}
       AND PAY_CD = #{payCd}
       AND DEL_FLG = '0'
    ]]>
    </update>
    <!--  입금 이력 정보를 삭제한다.   -->
    <update id="updatePaymentDel" parameterType="hashmap">
    <![CDATA[
    	UPDATE TB_CO_PAY
	    SET
	    	DEL_FLG = '1'
	        , WORKER = #{worker}
	        , UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	   WHERE ID_CD = '1'
       AND ID = #{coNo}
       AND PAY_CD = #{payCd}
       AND DEL_FLG = '0'
    ]]>
    </update>
    <!--  입금 이력 정보를 등록한다.   -->
    <insert id="insertPayment" parameterType="hashmap">
  	<!--  <selectKey resultType="integer" keyProperty="id">
	<![CDATA[
	     SELECT COUNT(ID) AS ID
	     FROM TB_CO_PAY
	     WHERE ID_CD = '1'
	     AND ID = #{coNo}
	     AND PAY_CD = #{payCd}
	     AND DEL_FLG = '0'
     ]]>
  	</selectKey>   -->
    <![CDATA[
	    INSERT INTO TB_CO_PAY
	   (   SEQ, ID_CD, ID, PAY_CD, REQ_AMT, PAY_ST_TYPE, EXP_FLG, REG_DT, WORKER, REG_DNT  )
	  VALUES
	   ( SEQ_CO_PAY.NEXTVAL, '1' , #{coNo}, #{payCd}, ${payAmt},  '9',  CASE WHEN ${payAmt} = '0' THEN '1' ELSE '0' END ,  DATE_FORMAT(NOW(), "%Y%m%d"), #{worker}, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")  )
	  ]]>
    </insert>
    <!--	 통화 정보를 등록한다.   -->
    <insert id="insertMemo" parameterType="hashmap">
    <![CDATA[
    	INSERT INTO TB_CONT_MEMO
	   (
		   SEQ, CO_NO, MEMO, WORKER, IP, REG_DNT
	   )
	  	VALUES
	   (
	   	   SEQ_CONT_MEMO.NEXTVAL, '1234567891', 'TEST', 'KHJ', '127.0.0.1', DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
   	   )
    ]]>
    </insert>
    <!--	카드 서브몰 등록 -->
    <insert id="insertCardSub" parameterType="hashmap">
    <![CDATA[
    	INSERT INTO TB_CARD_SMBS
	    (
	    	 REQ_DT, CO_NO, CP_CD, WORKER, REG_DNT
	    )
	    VALUES
	    (
		     DATE_FORMAT(NOW(), "%Y%m%d")
		     , #{coNo}
		     , #{cpCd}
		     , #{worker}
		     , DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	    )
    ]]>
    </insert>
     <select id="selectCoNo" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT
            	COUNT(CO_NO) AS CNT
            	,  COALESCE(UNUSE_FLG, 'X') UNUSE_FLG
            FROM   TB_CO
            WHERE  CO_NO = #{coNo}
            GROUP BY UNUSE_FLG
        ]]>
    </select>
    <select id="selectCoFee" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	   SELECT PM_CD, SPM_CD, TRUNC(FEE, 2) FEE
		   FROM TB_STMT_FEE
		   WHERE ID_CD = '0'
		      AND ID = #{coNo}
		      AND PM_CD = '01'
		      AND SPM_CD = #{spmCd}
		      AND ROWNUM < 2
		  UNION ALL
		  SELECT PM_CD, SPM_CD, TRUNC(FEE, 2) FEE
		  FROM TB_STMT_FEE
		  WHERE ID_CD = '0'
		      AND ID = #{coNo}
		      AND PM_CD = '02'
		      AND SPM_CD = #{spmCd}
		      AND FEE_TYPE_CD = '2'
		      AND ROWNUM < 2
		  UNION ALL
		  SELECT PM_CD, SPM_CD, FLOOR(AVG(FEE)) FEE
		  FROM TB_STMT_FEE
		  WHERE ID_CD = '0'
		      AND ID = #{coNo}
		      AND PM_CD = '03'
		      AND SPM_CD = #{spmCd}
		  GROUP BY PM_CD, SPM_CD
		  UNION ALL
		  SELECT PM_CD, SPM_CD, FEE
		  FROM TB_STMT_FEE
		  WHERE ID_CD = '0'
	            AND ID = #{coNo}
	            AND PM_CD = '05'
	            AND SPM_CD = #{spmCd}
	      UNION ALL
	      SELECT PM_CD, SPM_CD, FEE
	      FROM TB_STMT_FEE
	      WHERE ID_CD = '0'
	            AND ID = #{coNo}
	            AND PM_CD = '06'
	            AND SPM_CD =#{spmCd}
    ]]>
    </select>
    <select id="selectCoFeeInfo" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT FR_DT, FEE, FEE_TYPE_CD
    	]]>
    	<if test="pmCd == '01'">
    	<![CDATA[
			, CP_CD
    	]]>
    	</if>
    	<if test="pmCd == '02'">
    	<![CDATA[
			, FR_AMT
    	]]>
    	</if>
    	<![CDATA[
		FROM TB_STMT_FEE
		WHERE ID_CD = '0'
		AND ID = #{coNo}
		AND PM_CD = #{pmCd}
		AND SPM_CD = #{spmCd}
    ]]>
    </select>
    <!-- 수수료 등록 -->
    <insert id="insertFee" parameterType="hashmap">
    <![CDATA[
	    INSERT INTO TB_STMT_FEE
	   (
	    ID_CD  ,ID, PM_CD, SPM_CD, CP_CD
	    , FR_DT , TO_DT, FEE_TYPE_CD, FEE, WORKER, REG_DNT
	   )
	  VALUES
	   (
	    #{idCd} , #{id}, #{pmCd}, #{spmCd}, #{cpCd}
	    , DATE_FORMAT(NOW(), "%Y%m%d"),'99991231', #{feeTypeCd}, ${fee}, #{worker}, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	   )
    ]]>
    </insert>
    <!--  수수료 존재하는 지 조회  -->
    <select id="selectFee" parameterType="hashmap" resultType="integer">
    <![CDATA[
    	SELECT COUNT(*)
        FROM TB_STMT_FEE
        WHERE ID=#{id}
        AND PM_CD= #{pmCd}
        AND SPM_CD= #{spmCd}
        AND CP_CD=#{cpCd}
    ]]>
    </select>
    <!-- 수수료 업데이트-->
    <update id="updateFee" parameterType="hashmap">
    <![CDATA[
	   UPDATE TB_STMT_FEE
	   SET
   		FR_DT   = #{date}
     	, FEE_TYPE_CD  = #{feeType}
     	, FEE  = ${fee}
     	, WORKER  = #{worker}
     	, UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	   WHERE ID_CD  = #{idCd}
	   AND ID = #{id}
	   AND PM_CD = #{pmCd}
	   AND SPM_CD= #{spmCd}
	   AND CP_CD  = #{cpCd}
   	]]>
    </update>
    <select id="selectCoInfoListTotal" parameterType="hashmap" resultType="integer">
   	<![CDATA[
    	SELECT
	    	COUNT(1)
	      FROM
	      	TB_CO A
      	  LEFT OUTER JOIN TB_EMP B
      	  	ON A.CONT_EMP_NO = B.EMP_NO
	      WHERE
	      	1 = 1
      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt}
      	]]>
      	<choose>
      		<when test="division==2">
      		<![CDATA[
      			AND A.CO_NM LIKE '%'|| #{divisionvalue} || '%'
      		]]>
      		</when>
      		<when test="division==1">
      		<![CDATA[
      			AND A.CO_NO = #{divisionvalue}
      		]]>
      		</when>
      		<when test="division==3" >
      		<![CDATA[
      			AND A.REP_NM = #{divisionvalue}
      		]]>
      		</when>
      		<otherwise></otherwise>
      	</choose>
      	<if test="RECV_CHANNEL!='ALL'">
   		<![CDATA[
   			AND A.RECV_CH_CD = #{RECV_CHANNEL}
   		]]>
      	</if>
      	<if test="STATUS!='ALL'">
   		<![CDATA[
   			AND A.CONT_ST_CD =#{STATUS}
   		]]>
      	</if>
      	<if test="contManager!=null and contManager!=''">
   		<![CDATA[
   			AND B.EMP_NM LIKE '%'||#{contManager}||'%'
   		]]>
      	</if>
    </select>

    <select id="selectCoInfoList" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
   		SELECT * FROM
		(
    	    SELECT
	    	A.RECV_DT, A.CO_NO, A.CO_NM
	    	,(SELECT  X.REQ_AMT FROM TB_CO_PAY X WHERE X.ID_CD = '1' AND X.ID = A.CO_NO AND X.PAY_CD = '1' AND X.DEL_FLG = '0' AND ROWNUM=1)  REG_AMT
		    ,(SELECT  X.REQ_AMT FROM TB_CO_PAY X WHERE X.ID_CD = '1' AND X.ID = A.CO_NO AND X.PAY_CD = '2' AND X.DEL_FLG = '0' AND ROWNUM=1) YEAR_AMT
		    , A.CONTDOC_RCV_FLG
		    ,(SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0004' AND CODE1=A.CONT_ST_CD) STATE
		    , NULL CONFIRM
		    , (SELECT EMP_NM FROM TB_EMP WHERE EMP_NO= A.CONT_EMP_NO) EMP_NM
		    , (SELECT X.IMG_URL FROM TB_CONT_IMG X WHERE X.CO_NO = A.CO_NO AND ROWNUM=1) IMG_URL
	    	, RECV_CH_CD
	    	, ROWNUM AS RNUM
	      FROM
	      	TB_CO A
      	  LEFT OUTER JOIN TB_EMP B
      	  	ON A.CONT_EMP_NO = B.EMP_NO
	      WHERE
	      	1 = 1
   			AND A.RECV_DT BETWEEN #{frDt} AND #{toDt} 
      	]]>
      	<choose>
      		<when test="division==2">
      		<![CDATA[
      			AND A.CO_NM LIKE '%' || #{divisionvalue}|| '%'
      		]]>
      		</when>
      		<when test="division==1">
      		<![CDATA[
      			AND A.CO_NO = #{divisionvalue}
      		]]>
      		</when>
      		<when test="division==3" >
      		<![CDATA[
      			AND A.REP_NM = #{divisionvalue}
      		]]>
      		</when>
      		<otherwise></otherwise>
      	</choose>
      	<if test="RECV_CHANNEL!='ALL'">
   		<![CDATA[
   			AND A.RECV_CH_CD = #{RECV_CHANNEL}
   		]]>
      	</if>
      	<if test="STATUS!='ALL'">
   		<![CDATA[
   			AND A.CONT_ST_CD =#{STATUS}
   		]]>
      	</if>
      	<if test="contManager!=null and contManager!=''">
   		<![CDATA[
   			AND B.EMP_NM LIKE '%'||#{contManager}||'%'
   		]]>
      	</if>
      	<![CDATA[
      		ORDER BY A.RECV_DT DESC
      		) TBL
   			WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
      	]]>
    </select>
    <select id="getCardSubmallDupChkLst" parameterType="hashmap" resultType="String">
    <![CDATA[
    	  SELECT
    		DISTINCT A.CP_CD
		  FROM
		  	TB_STMT_FEE A
	  	  LEFT OUTER JOIN
	  	  	TB_CARD_SMBS B
  	  		ON
  	  			A.ID = B.CO_NO
  			AND
  				A.CP_CD = B.CP_CD
	      , TB_CODE C
		  WHERE
		  	C.CODE_CL = '0002'
		  AND C.CODE2 = 'pur'
		  AND C.USE_FLG = '0'
		  AND A.CP_CD = C.CODE1
		  AND A.ID_CD = '0'
		  AND A.PM_CD = '01'
		  AND A.ID = #{coNo}
		  AND B.CP_CD IS NULL
    ]]>
    </select>

    <select id="selectCoApprInfoList"   parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT * FROM
    	(
	    	SELECT
		       A.RECV_DT, A.CO_NO, A.CO_NM, A.CONT_ST_CD, A.CONT_EMP_NO
		       , (SELECT MAX(X.EMP_NM) FROM TB_EMP X WHERE X.EMP_NO = A.CONT_EMP_NO) EMP_NM
		       , ROWNUM AS RNUM
           ,(SELECT COALESCE(TRUNC(A.TOTAL/A.CNT, 2), 0 )
              FROM (
                SELECT SUM(FEE) TOTAL, COUNT(1) CNT
                FROM TB_STMT_FEE
                WHERE ID_CD = '0'
                AND ID = '1232161151'
                AND PM_CD = '01'
                AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
              ) A) AS AVG_FEE
           , (SELECT COALESCE(REQ_AMT, 0) REQ_AMT
              FROM TB_CO_PAY
              WHERE ID_CD ='1' AND ID = '123456789' AND DEL_FLG = '0'
              ) AS REQ_AMT
           , (SELECT PAY_CD
              FROM TB_CO_PAY
              WHERE ID_CD ='1' AND ID = '123456789' AND DEL_FLG = '0'
              ) AS PAY_CD
		    FROM TB_CO A
		    WHERE 1 = 1
      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt} 
		    ]]>
		    <choose>
	      		<when test="division==2">
	      		<![CDATA[
	      			AND A.CO_NM LIKE '%' ||  #{divisionvalue} || '%'
	      		]]>
	      		</when>
	      		<when test="division==1">
	      		<![CDATA[
	      			AND A.CO_NO = #{divisionvalue}
	      		]]>
	      		</when>
	      		<when test="division==3" >
	      		<![CDATA[
	      			AND A.REP_NM = #{divisionvalue}
	      		]]>
	      		</when>
	      		<otherwise></otherwise>
	      	</choose>
	      	<if test="contManager != null and contManager != ''" >
	      	<![CDATA[
	      		AND A.CONT_EMP_NO = #{contManager}
	      	]]>
	      	</if>
	      	<if test="STATUS != 'ALL'" >
	      	<![CDATA[
	      		AND A.CONT_ST_CD =#{STATUS}
	      	]]>
	      	</if>
	  	<![CDATA[
	      ORDER BY A.RECV_DT DESC
		) TBL
	WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
    ]]>
    </select>
    <select id="selectCoApprInfoListTotal"   parameterType="hashmap" resultType="integer">
    <![CDATA[
    	SELECT
	       COUNT(1)
	    FROM TB_CO A
	    WHERE 1 = 1
  		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt} 
	    ]]>
	    <choose>
      		<when test="division==2">
      		<![CDATA[
      			AND A.CO_NM LIKE '%' ||  #{divisionvalue} || '%'
      		]]>
      		</when>
      		<when test="division==1">
      		<![CDATA[
      			AND A.CO_NO = #{divisionvalue}
      		]]>
      		</when>
      		<when test="division==3" >
      		<![CDATA[
      			AND A.REP_NM = #{divisionvalue}
      		]]>
      		</when>
      		<otherwise></otherwise>
      	</choose>
      	<if test="contManager != null and contManager != ''" >
      	<![CDATA[
      		AND A.CONT_EMP_NO = #{contManager}
      	]]>
      	</if>
      	<if test="STATUS != 'ALL'" >
      	<![CDATA[
      		AND A.CONT_ST_CD =#{STATUS}
      	]]>
      	</if>
    </select>
    <select id="getCompAverageFee" parameterType="hashmap" resultType="String">
    <![CDATA[
    	SELECT COALESCE(TRUNC(A.TOTAL/A.CNT, 2), 0 )
		  FROM (
		    SELECT SUM(FEE) TOTAL, COUNT(1) CNT
		    FROM TB_STMT_FEE
		    WHERE ID_CD = '0'
		    AND ID = #{CO_NO}
		    AND PM_CD = '01'
		    AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
		  ) A
    ]]>
    </select>
    <select id="getCompPay" parameterType="hashmap" resultType="String">
    <![CDATA[
    	SELECT COALESCE(REQ_AMT, 0) REQ_AMT, PAY_CD
	    FROM TB_CO_PAY
		WHERE ID_CD ='1' AND ID = #{CO_NO} AND DEL_FLG = '0'
    ]]>
    </select>

    <select id="selectCoApprMInfoList" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT * FROM
    	(
	    	SELECT
			    A.CO_NO, A.CO_NM, B.MID_URL
			    , CASE WHEN B.VID = '000000000V' THEN '본사' ELSE '대행' END AS AGENT_CL_NM
			    , (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0057' AND CODE1=B.AUTH_TYPE) AS AUTH_FLG_NM
			    , B.MID, A.CO_NM AS MID_NM, TERM.TERM_NO, ACCNT.VID, ACCNT.VGRP_NM
			    , (SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0038' AND CODE1=CYCLE.STMT_CYCLE_CD) AS CYCLE
			    , CASE WHEN FEE01_USE = '1' THEN FEE01 ELSE 0 END FEE01, CASE WHEN FEE02_USE = '1' THEN FEE0201 ELSE 0 END FEE0201
			    , CASE WHEN FEE02_USE = '1' THEN FEE0202 ELSE 0 END FEE0202, CASE WHEN FEE03_USE = '1' THEN FEE03 ELSE 0 END FEE03
			    , CASE WHEN FEE05_USE = '1' THEN FEE05 ELSE 0 END FEE05
			    , ROWNUM AS RNUM
			  FROM TB_CO A
			  LEFT OUTER JOIN TB_MBS B ON A.CO_NO = B.CO_NO

			  LEFT OUTER JOIN (
			   SELECT A.MID, SUM(FEE01_USE) FEE01_USE, SUM(FEE02_USE) FEE02_USE, SUM(FEE03_USE) FEE03_USE, SUM(FEE05_USE) FEE05_USE
			   FROM (
			         SELECT MID, CASE WHEN PM_CD = '01' THEN 1 ELSE 0 END FEE01_USE, CASE WHEN PM_CD = '02' THEN 1 ELSE 0 END FEE02_USE,
			           CASE WHEN PM_CD = '03' THEN 1 ELSE 0 END FEE03_USE, CASE WHEN PM_CD = '05' THEN 1 ELSE 0 END FEE05_USE
			         FROM TB_MBS_PM WHERE USE_FLG = '1'
			         GROUP BY MID, PM_CD
			      ) A GROUP BY A.MID
			        )PM ON B.MID = PM.MID

			  LEFT OUTER JOIN (
			   SELECT A.ID, SUM(A.FEE01) FEE01, SUM(A.FEE0201) FEE0201, SUM(A.FEE0202) FEE0202, SUM(A.FEE03) FEE03, SUM(A.FEE05) FEE05
			   FROM (
			    SELECT ID, ROUND(AVG(CASE WHEN PM_CD = '01' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE01,
			     ROUND(AVG(CASE WHEN PM_CD = '02' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE0201,
			     ROUND(AVG(CASE WHEN PM_CD = '02' AND FEE_TYPE_CD = '3' THEN FEE ELSE 0 END)) FEE0202,
			     ROUND(AVG(CASE WHEN PM_CD = '03' AND FEE_TYPE_CD = '3' THEN FEE ELSE 0 END)) FEE03,
			     ROUND(AVG(CASE WHEN PM_CD = '05' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE05
			    FROM TB_STMT_FEE WHERE ID_CD = '1' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT AND USE_ST_TYPE = '1' AND CP_CD != '99'
			    GROUP BY ID, PM_CD, FEE_TYPE_CD, FR_AMT, TO_AMT
			   ) A GROUP BY A.ID
			  ) FEE ON B.MID = FEE.ID

			  LEFT OUTER JOIN (
			   SELECT A.MID, A.CO_NO, LISTAGG(A.TERM_NO , '/') WITHIN GROUP(ORDER BY A.TERM_NO) AS TERM_NO
			   FROM (
			    SELECT MID, CO_NO, TERM_NO
			    FROM TB_LNK_INFO
			    WHERE PM_CD = '01' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FT_DT AND TO_DT
			    GROUP BY MID, CO_NO, TERM_NO
			   ) A GROUP BY A.MID, A.CO_NO
			  ) TERM ON B.MID = TERM.MID

			  LEFT OUTER JOIN (
			   SELECT LMT_ID, PM_CD, AMT_LMT
			   FROM TB_LMT
			   WHERE ID_CD = '1' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
			   AND AMT_TYPE = '1' AND PM_CD = '01'
			   GROUP BY LMT_ID, PM_CD, AMT_LMT
			  ) LIM1 ON B.CO_NO = LIM1.LMT_ID

			  LEFT OUTER JOIN (
			   SELECT LMT_ID, PM_CD, AMT_LMT
			   FROM TB_LMT
			   WHERE LMT_CD = '2' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
			   AND AMT_TYPE = '1' AND PM_CD = '01'
			   GROUP BY LMT_ID, PM_CD, AMT_LMT
			  ) LIM2 ON B.MID = LIM2.LMT_ID

			  LEFT OUTER JOIN TB_STMT_CYCLE CYCLE
			  ON B.MID = CYCLE.MID AND CYCLE.PM_CD = '01' AND CYCLE.SPM_CD = '01'
			  AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN CYCLE.FR_DT AND CYCLE.TO_DT

			  LEFT OUTER JOIN TB_VGRP ACCNT ON B.VID = ACCNT.VID

			  WHERE 1 = 1
			  ]]>
		  	<if test="useDate != null and useDate != ''" >
	      	<![CDATA[
	      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt}
	      	]]>
	      	</if>
		    <choose>
	      		<when test="division==2">
	      		<![CDATA[
	      			AND A.CO_NM LIKE CONCAT('%', #{divisionvalue}, '%')
	      		]]>
	      		</when>
	      		<when test="division==1">
	      		<![CDATA[
	      			AND A.CO_NO = #{divisionvalue}
	      		]]>
	      		</when>
	      		<when test="division==3" >
	      		<![CDATA[
	      			AND A.REP_NM = #{divisionvalue}
	      		]]>
	      		</when>
	      		<otherwise></otherwise>
	      	</choose>
	      	<if test="contManager != null and contManager != ''" >
	      	<![CDATA[
	      		AND A.CONT_EMP_NO = #{contManager}
	      	]]>
	      	</if>
	      	<if test="STATUS != 'ALL'" >
	      	<![CDATA[
	      		AND A.CONT_ST_CD =#{STATUS}
	      	]]>
	      	</if>
	   	<![CDATA[
	      	ORDER BY RNUM ASC
      	) TBL
		WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
    ]]>
    </select>

    <select id="selectCoApprMInfoListTotal" parameterType="hashmap" resultType="integer">
    <![CDATA[
    	SELECT
		    COUNT(1)
		  FROM TB_CO A
		  LEFT OUTER JOIN TB_MBS B ON A.CO_NO = B.CO_NO

		  LEFT OUTER JOIN (
		   SELECT A.MID, SUM(FEE01_USE) FEE01_USE, SUM(FEE02_USE) FEE02_USE, SUM(FEE03_USE) FEE03_USE, SUM(FEE05_USE) FEE05_USE
		   FROM (
		         SELECT MID, CASE WHEN PM_CD = '01' THEN 1 ELSE 0 END FEE01_USE, CASE WHEN PM_CD = '02' THEN 1 ELSE 0 END FEE02_USE,
		           CASE WHEN PM_CD = '03' THEN 1 ELSE 0 END FEE03_USE, CASE WHEN PM_CD = '05' THEN 1 ELSE 0 END FEE05_USE
		         FROM TB_MBS_PM WHERE USE_FLG = '1'
		         GROUP BY MID, PM_CD
		      ) A GROUP BY A.MID
		        )PM ON B.MID = PM.MID

		  LEFT OUTER JOIN (
		   SELECT A.ID, SUM(A.FEE01) FEE01, SUM(A.FEE0201) FEE0201, SUM(A.FEE0202) FEE0202, SUM(A.FEE03) FEE03, SUM(A.FEE05) FEE05
		   FROM (
		    SELECT ID, ROUND(AVG(CASE WHEN PM_CD = '01' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE01,
		     ROUND(AVG(CASE WHEN PM_CD = '02' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE0201,
		     ROUND(AVG(CASE WHEN PM_CD = '02' AND FEE_TYPE_CD = '3' THEN FEE ELSE 0 END)) FEE0202,
		     ROUND(AVG(CASE WHEN PM_CD = '03' AND FEE_TYPE_CD = '3' THEN FEE ELSE 0 END)) FEE03,
		     ROUND(AVG(CASE WHEN PM_CD = '05' AND FEE_TYPE_CD = '2' THEN FEE ELSE 0 END),2) FEE05
		    FROM TB_STMT_FEE WHERE ID_CD = '1' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT AND USE_ST_TYPE = '1' AND CP_CD != '99'
		    GROUP BY ID, PM_CD, FEE_TYPE_CD, FR_AMT, TO_AMT
		   ) A GROUP BY A.ID
		  ) FEE ON B.MID = FEE.ID

		  LEFT OUTER JOIN (
		   SELECT A.MID, A.CO_NO, LISTAGG(A.TERM_NO , '/') WITHIN GROUP(ORDER BY A.TERM_NO) AS TERM_NO
		   FROM (
		    SELECT MID, CO_NO, TERM_NO
		    FROM TB_LNK_INFO
		    WHERE PM_CD = '01' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FT_DT AND TO_DT
		    GROUP BY MID, CO_NO, TERM_NO
		   ) A GROUP BY A.MID, A.CO_NO
		  ) TERM ON B.MID = TERM.MID

		  LEFT OUTER JOIN (
		   SELECT LMT_ID, PM_CD, AMT_LMT
		   FROM TB_LMT
		   WHERE ID_CD = '1' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
		   AND AMT_TYPE = '1' AND PM_CD = '01'
		   GROUP BY LMT_ID, PM_CD, AMT_LMT
		  ) LIM1 ON B.CO_NO = LIM1.LMT_ID

		  LEFT OUTER JOIN (
		   SELECT LMT_ID, PM_CD, AMT_LMT
		   FROM TB_LMT
		   WHERE LMT_CD = '2' AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
		   AND AMT_TYPE = '1' AND PM_CD = '01'
		   GROUP BY LMT_ID, PM_CD, AMT_LMT
		  ) LIM2 ON B.MID = LIM2.LMT_ID

		  LEFT OUTER JOIN TB_STMT_CYCLE CYCLE
		  ON B.MID = CYCLE.MID AND CYCLE.PM_CD = '01' AND CYCLE.SPM_CD = '01'
		  AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN CYCLE.FR_DT AND CYCLE.TO_DT

		  LEFT OUTER JOIN TB_VGRP ACCNT ON B.VID = ACCNT.VID

		  WHERE 1 = 1
		  ]]>
		  <if test="useDate != null and useDate != ''" >
      	<![CDATA[
      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt}
      	]]>
      	</if>
	    <choose>
      		<when test="division==2">
      		<![CDATA[
      			AND A.CO_NM LIKE CONCAT('%', #{divisionvalue}, '%')
      		]]>
      		</when>
      		<when test="division==1">
      		<![CDATA[
      			AND A.CO_NO = #{divisionvalue}
      		]]>
      		</when>
      		<when test="division==3" >
      		<![CDATA[
      			AND A.REP_NM = #{divisionvalue}
      		]]>
      		</when>
      		<otherwise></otherwise>
      	</choose>
      	<if test="contManager != null and contManager != ''" >
      	<![CDATA[
      		AND A.CONT_EMP_NO = #{contManager}
      	]]>
      	</if>
      	<if test="STATUS != 'ALL'" >
      	<![CDATA[
      		AND A.CONT_ST_CD =#{STATUS}
      	]]>
      	</if>
    </select>
    <select id="selectCoApprVInfoList" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT * FROM
    	(
	    	SELECT
			    A.CO_NO, A.CO_NM, V.VID, V.VGRP_NM
			    , CASE WHEN V.VID = '000000000V' THEN '본사' ELSE '대행' END AS AGENT_CL_NM
			    , FEE01.FEE_01_01, FEE01.FEE_01_02, FEE02.FEE_02_01, FEE02.FEE_02_02, FEE03.FEE_03, FEE05.FEE_05_01, FEE05.FEE_05_02
			    , ROWNUM AS RNUM
			  FROM TB_CO A
			  LEFT OUTER JOIN TB_MBS B ON A.CO_NO = B.CO_NO
			  LEFT OUTER JOIN TB_VGRP V ON A.CO_NO = B.CO_NO
			  LEFT OUTER JOIN (
				   SELECT
				   A.VID, MAX(B.FEE) AS FEE_01_01, MAX(B.ETC_FEE) AS FEE_01_02
				    FROM TB_VGRP A, TB_STMT_FEE B
				   WHERE A.VID = B.ID
				   AND B.ID_CD = '3'
				   AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
				   AND B.USE_ST_TYPE = '1'
				   AND B.PM_CD = '01'
				   GROUP BY A.VID
			  ) FEE01 ON B.VID = FEE01.VID

			  LEFT OUTER JOIN (
				   SELECT
				   A.VID
				   , MAX(CASE WHEN B.PM_CD = '02' AND B.FEE_TYPE_CD = '3' THEN B.FEE ELSE 0 END) FEE_02_01
				   , MAX(CASE WHEN B.PM_CD = '02' AND B.FEE_TYPE_CD = '2' THEN B.FEE ELSE 0 END) FEE_02_02
				    FROM TB_VGRP A, TB_STMT_FEE B
				   WHERE A.VID = B.ID
				   AND B.ID_CD = '3'
				   AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
				   AND B.USE_ST_TYPE = '1'
				   AND B.PM_CD = '02'
				   GROUP BY A.VID
			  )FEE02 ON B.VID = FEE02.VID
	        LEFT OUTER JOIN (
	           SELECT
	           A.VID, MAX(B.FEE) FEE_03
	            FROM TB_VGRP A, TB_STMT_FEE B
	           WHERE A.VID = B.ID
	           AND B.ID_CD = '3'
	           AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
	           AND B.USE_ST_TYPE = '1'
	           AND B.PM_CD = '03'
	           GROUP BY A.VID
	          )FEE03 ON B.VID = FEE03.VID

	          LEFT OUTER JOIN (
	           SELECT
	           A.VID
	           , MAX(CASE WHEN B.PM_CD = '05' AND B.CP_CD = 'CONTENTS' THEN B.FEE ELSE 0 END) FEE_05_01
	           , MAX(CASE WHEN B.PM_CD = '05' AND B.CP_CD = 'GOODS' THEN B.FEE ELSE 0 END) FEE_05_02
	           FROM TB_VGRP A, TB_STMT_FEE B
	           WHERE A.VID = B.ID
	           AND B.ID_CD = '3'
	           AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
	           AND B.USE_ST_TYPE = '1'
	           AND B.PM_CD = '05'
	           GROUP BY A.VID
	          )FEE05 ON B.VID = FEE05.VID

	   		WHERE A.CO_NO = B.CO_NO
			  ]]>
		  	<if test="useDate != null and useDate != ''" >
	      	<![CDATA[
	      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt}
	      	]]>
	      	</if>
		    <choose>
	      		<when test="division==2">
	      		<![CDATA[
	      			AND A.CO_NM LIKE CONCAT('%', #{divisionvalue}, '%')
	      		]]>
	      		</when>
	      		<when test="division==1">
	      		<![CDATA[
	      			AND A.CO_NO = #{divisionvalue}
	      		]]>
	      		</when>
	      		<when test="division==3" >
	      		<![CDATA[
	      			AND A.REP_NM = #{divisionvalue}
	      		]]>
	      		</when>
	      		<otherwise></otherwise>
	      	</choose>
	      	<if test="contManager != null and contManager != ''" >
	      	<![CDATA[
	      		AND A.CONT_EMP_NO = #{contManager}
	      	]]>
	      	</if>
	      	<if test="STATUS != 'ALL'" >
	      	<![CDATA[
	      		AND A.CONT_ST_CD =#{STATUS}
	      	]]>
	      	</if>
	   	<![CDATA[
	      	ORDER BY RNUM ASC
      	) TBL
		WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
    ]]>
    </select>

    <select id="selectCoApprVInfoListTotal" parameterType="hashmap" resultType="integer">
    <![CDATA[
    	SELECT
		    COUNT(1)
		  FROM TB_CO A
		  LEFT OUTER JOIN TB_MBS B ON A.CO_NO = B.CO_NO
			  LEFT OUTER JOIN TB_VGRP V ON A.CO_NO = B.CO_NO
			  LEFT OUTER JOIN (
				   SELECT
				   A.VID, MAX(B.FEE) AS FEE_01_01, MAX(B.ETC_FEE) AS FEE_01_02
				    FROM TB_VGRP A, TB_STMT_FEE B
				   WHERE A.VID = B.ID
				   AND B.ID_CD = '3'
				   AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
				   AND B.USE_ST_TYPE = '1'
				   AND B.PM_CD = '01'
				   GROUP BY A.VID
			  ) FEE01 ON B.VID = FEE01.VID

			  LEFT OUTER JOIN (
				   SELECT
				   A.VID
				   , MAX(CASE WHEN B.PM_CD = '02' AND B.FEE_TYPE_CD = '3' THEN B.FEE ELSE 0 END) FEE_02_01
				   , MAX(CASE WHEN B.PM_CD = '02' AND B.FEE_TYPE_CD = '2' THEN B.FEE ELSE 0 END) FEE_02_02
				    FROM TB_VGRP A, TB_STMT_FEE B
				   WHERE A.VID = B.ID
				   AND B.ID_CD = '3'
				   AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
				   AND B.USE_ST_TYPE = '1'
				   AND B.PM_CD = '02'
				   GROUP BY A.VID
			  )FEE02 ON B.VID = FEE02.VID
	        LEFT OUTER JOIN (
	           SELECT
	           A.VID, MAX(B.FEE) FEE_03
	            FROM TB_VGRP A, TB_STMT_FEE B
	           WHERE A.VID = B.ID
	           AND B.ID_CD = '3'
	           AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
	           AND B.USE_ST_TYPE = '1'
	           AND B.PM_CD = '03'
	           GROUP BY A.VID
	          )FEE03 ON B.VID = FEE03.VID

	          LEFT OUTER JOIN (
	           SELECT
	           A.VID
	           , MAX(CASE WHEN B.PM_CD = '05' AND B.CP_CD = 'CONTENTS' THEN B.FEE ELSE 0 END) FEE_05_01
	           , MAX(CASE WHEN B.PM_CD = '05' AND B.CP_CD = 'GOODS' THEN B.FEE ELSE 0 END) FEE_05_02
	           FROM TB_VGRP A, TB_STMT_FEE B
	           WHERE A.VID = B.ID
	           AND B.ID_CD = '3'
	           AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN B.FR_DT AND B.TO_DT
	           AND B.USE_ST_TYPE = '1'
	           AND B.PM_CD = '05'
	           GROUP BY A.VID
	          )FEE05 ON B.VID = FEE05.VID

   		WHERE A.CO_NO = B.CO_NO
		  ]]>
		  <if test="useDate != null and useDate != ''" >
      	<![CDATA[
      		AND A.RECV_DT BETWEEN #{frDt} AND #{toDt}
      	]]>
      	</if>
	    <choose>
      		<when test="division==2">
      		<![CDATA[
      			AND A.CO_NM LIKE CONCAT('%', #{divisionvalue}, '%')
      		]]>
      		</when>
      		<when test="division==1">
      		<![CDATA[
      			AND A.CO_NO = #{divisionvalue}
      		]]>
      		</when>
      		<when test="division==3" >
      		<![CDATA[
      			AND A.REP_NM = #{divisionvalue}
      		]]>
      		</when>
      		<otherwise></otherwise>
      	</choose>
      	<if test="contManager != null and contManager != ''" >
      	<![CDATA[
      		AND A.CONT_EMP_NO = #{contManager}
      	]]>
      	</if>
      	<if test="STATUS != 'ALL'" >
      	<![CDATA[
      		AND A.CONT_ST_CD =#{STATUS}
      	]]>
      	</if>
    </select>
    <update id="updateCoApp" parameterType="hashmap">
    <![CDATA[
    	UPDATE TB_CO
    		SET CONT_ST_CD = #{approv}
		WHERE CO_NO = #{coNo}
    ]]>
    </update>
    <select id="selectCoView" parameterType="hashmap" resultType="hashmap">
   	<![CDATA[
   		SELECT CO_NO, CO_NM,REP_NM
	        ,OPEN_DT,POST_NO,ADDR_NO1,ADDR_NO2,RPOST_NO,RADDR_NO1,RADDR_NO2
	        ,BS_KIND,GD_KIND,MAIN_GOODS_NM,TRUNC(FUND_AMT,0) FUND_AMT,RECV_DT,CONT_NM,CONT_TEL,CONT_CP,CONT_EMAIL,SETT_NM,SETT_TEL,SETT_EMAIL,CONT_DT
	        ,CO_URL,ON_SVC_LST,TEL_NO,FAX_NO,EMAIL , CONT_ST_CD, RECV_CH_CD, CONT_EMP_NO, MGR1_EMP_NO
        	,(SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0007' AND CODE1=RECV_CH_CD) RECV_CH
        	,(SELECT DESC1 FROM TB_CODE WHERE CODE_CL='0004' AND CODE1=CONT_ST_CD) CONT_ST
	        ,PAY_FRSTFEE_TYPE,PAY_YEARFEE_TYPE,CONT_EMP_NO,MGR1_EMP_NO,CONTDOC_RCV_FLG
	    FROM TB_CO
	    WHERE CO_NO=#{coNo}
   	]]>
    </select>
    <select id="selectCoMemoList" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT MEMO, WORKER, SUBSTR(REG_DNT, 0,8) WRITE_DT , SUBSTR(REG_DNT,9,14) WRITE_TM
    	FROM TB_CONT_MEMO
    	WHERE CO_NO = #{coNo}
    	ORDER BY SEQ DESC
    ]]>
    </select>
    <select id="selectContPayInfo" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT COALESCE(REQ_AMT, 0 ) REQ_AMT, PAY_ST_TYPE
    	FROM TB_CO_PAY
    	WHERE ID_CD = '1'
    	AND ID = #{coNo}
    	AND PAY_CD = #{payCd}
    	AND DEL_FLG ='0'
    	AND ROWNUM = 1
    	ORDER BY SEQ
    ]]>
    </select>
    <select id="selectContFeeAllInfo" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	SELECT
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '01' THEN FEE ELSE 0 END) ON_BC,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '02' THEN FEE ELSE 0 END) ON_KB,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '03' THEN FEE ELSE 0 END) ON_KE,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '04' THEN FEE ELSE 0 END) ON_SS,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '06' THEN FEE ELSE 0 END) ON_SH,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '07' THEN FEE ELSE 0 END) ON_HD,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '08' THEN FEE ELSE 0 END) ON_LT,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '12' THEN FEE ELSE 0 END) ON_NH,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '00' AND FR_AMT = 1 THEN FEE ELSE 0 END) ON_KFTC_01,
	      MAX(CASE WHEN SPM_CD = '01' AND CP_CD = '00' AND FR_AMT = 11601 THEN FEE ELSE 0 END) ON_KFTC_02,
	      FLOOR(COALESCE(SUM(CASE WHEN PM_CD = '03' AND SPM_CD = '01' THEN FEE ELSE 0 END)/DECODE(SUM(CASE WHEN PM_CD = '03' AND SPM_CD = '01' THEN 1 ELSE 0 END), 0 , NULL, SUM(CASE WHEN PM_CD = '03' AND SPM_CD = '01' THEN 1 ELSE 0 END)),0)) ON_VACCT,
	      MAX(CASE WHEN PM_CD = '05' AND SPM_CD = '01' THEN FEE_TYPE_CD ELSE '0' END) ON_CP_TYPE,
	      MAX(CASE WHEN PM_CD = '05' AND SPM_CD = '01' THEN FEE ELSE 0 END) ON_CP,
	      MAX(CASE WHEN PM_CD = '06' AND SPM_CD = '01' THEN FEE_TYPE_CD ELSE '0' END) ON_CPB_TYPE,
	      MAX(CASE WHEN PM_CD = '06' AND SPM_CD = '01' THEN FEE ELSE 0 END) ON_CPB,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '01' THEN FEE ELSE 0 END) MO_BC,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '02' THEN FEE ELSE 0 END) MO_KB,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '03' THEN FEE ELSE 0 END) MO_KE,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '04' THEN FEE ELSE 0 END) MO_SS,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '06' THEN FEE ELSE 0 END) MO_SH,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '07' THEN FEE ELSE 0 END) MO_HD,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '08' THEN FEE ELSE 0 END) MO_LT,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '12' THEN FEE ELSE 0 END) MO_NH,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '00' AND FR_AMT = 1 THEN FEE ELSE 0 END) MO_KFTC_01,
	      MAX(CASE WHEN SPM_CD = '02' AND CP_CD = '00' AND FR_AMT = 11601 THEN FEE ELSE 0 END) MO_KFTC_02,
	      FLOOR(COALESCE(SUM(CASE WHEN SPM_CD = '02' AND PM_CD = '03' THEN FEE ELSE 0 END)/DECODE(SUM(CASE WHEN SPM_CD = '02' AND PM_CD = '01' THEN 1 ELSE 0 END), 0 , NULL, SUM(CASE WHEN SPM_CD = '02' AND PM_CD = '01' THEN 1 ELSE 0 END)),0))MO_VACCT,
	      MAX(CASE WHEN SPM_CD = '02' AND PM_CD = '05' THEN FEE ELSE 0 END) MO_CP,
	      MAX(CASE WHEN SPM_CD = '02' AND PM_CD = '06' THEN FEE ELSE 0 END) MO_CPB,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '01' THEN FEE ELSE 0 END) SM_BC,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '02' THEN FEE ELSE 0 END) SM_KB,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '03' THEN FEE ELSE 0 END) SM_KE,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '04' THEN FEE ELSE 0 END) SM_SS,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '06' THEN FEE ELSE 0 END) SM_SH,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '07' THEN FEE ELSE 0 END) SM_HD,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '08' THEN FEE ELSE 0 END) SM_LT,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '12' THEN FEE ELSE 0 END) SM_NH,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '00' AND FR_AMT = 1 THEN FEE ELSE 0 END) SM_KFTC_01,
	      MAX(CASE WHEN SPM_CD = '03' AND CP_CD = '00' AND FR_AMT = 11601 THEN FEE ELSE 0 END) SM_KFTC_02,
	      FLOOR(COALESCE(SUM(CASE WHEN SPM_CD = '03' AND PM_CD = '03' THEN FEE ELSE 0 END)/DECODE(SUM(CASE WHEN SPM_CD = '03' AND PM_CD = '03' THEN 1 ELSE 0 END), 0 , NULL, SUM(CASE WHEN SPM_CD = '03' AND PM_CD = '03' THEN 1 ELSE 0 END)),0))SM_VACCT,
	      MAX(CASE WHEN SPM_CD = '03' AND PM_CD = '05' THEN FEE_TYPE_CD ELSE '0' END) SM_CP_TYPE,
	      MAX(CASE WHEN SPM_CD = '03' AND PM_CD = '05' THEN FEE ELSE 0 END) SM_CP,
	      MAX(CASE WHEN SPM_CD = '03' AND PM_CD = '06' THEN FEE_TYPE_CD ELSE '0' END) SM_CPB_TYPE,
	      MAX(CASE WHEN SPM_CD = '03' AND PM_CD = '06' THEN FEE ELSE 0 END) SM_CPB
	    FROM TB_STMT_FEE
	    WHERE ID_CD = '0'
	   	AND ID = #{coNo}
	   	AND DATE_FORMAT(NOW(), "%Y%m%d") BETWEEN FR_DT AND TO_DT
    ]]>
    </select>
    <select id="selectFeeViewCardLst" parameterType="hashmap" resultType="hashmap">
    <![CDATA[
    	 SELECT PM_CD, SPM_CD, FR_AMT, TO_AMT, FR_DT, TO_DT, FEE_TYPE_CD
	     , TO_CHAR(CASE WHEN PM_CD = '02' AND FR_AMT = 1 AND TO_AMT = 99999999999999   THEN '03'
	       WHEN PM_CD = '02' AND FR_AMT = 1 AND FEE_TYPE_CD = '3' THEN '01'
	       WHEN PM_CD = '02' AND FR_AMT = 11601 THEN '02'
	                WHEN PM_CD IN ('05', '06') THEN CASE WHEN FR_AMT = 1 THEN '01'
	                           ELSE '02'
	                          END
	                WHEN PM_CD = '11' AND FR_AMT = 1 THEN '01'
	                WHEN PM_CD = '12' AND FR_AMT = 1 THEN '01'
	                WHEN PM_CD = '13' AND FR_AMT = 1 THEN '01'
	                  ELSE CP_CD
	            END) CP_CD
	        , CASE WHEN FEE_TYPE_CD = 3    THEN TRUNC(FEE, 0)
	               ELSE TRUNC(FEE, 2)
	         END FEE
	        FROM TB_STMT_FEE
	      WHERE ID = #{mid}
	      AND ID_CD = #{idCd}
    ]]>
    <if test="inqy_cl!=''">
    <![CDATA[
    	AND TO_DT = '99991231'
    ]]>
    </if>
    <if test="pmCd!=null">
    <![CDATA[
    	AND PM_CD = #{pmCd}
    ]]>
    </if>
    <if test="spmCd!=null">
    <![CDATA[
    	AND SPM_CD = #{spmCd}
    ]]>
    </if>
    </select>
    <!-- 동일 계약서 이미지명 등록여부 - Count  -->
    <select id="selectContDocCnt" parameterType="hashmap" resultType="integer">
    <![CDATA[
    	SELECT COUNT(1)
	    FROM TB_CONT_IMG
	    WHERE IMG_NM = #{imgNm}
    ]]>
    </select>
    <!-- 계약서 이미지 등록 -->
    <insert id="insertContDoc" parameterType="hashmap">
    <![CDATA[
    	INSERT INTO TB_CONT_IMG
	    (
	      CO_NO
	      , REG_DT
	      , REG_TM
	      , IMG_NM
	      , IMG_URL
	      , WORKER
	      , REG_DNT
	    )
	    VALUES
	    (
	      #{coNo}
	      , DATE_FORMAT(NOW(), "%Y%m%d")
	      , DATE_FORMAT(NOW(), "%H%i%s")
	      , #{imgNm}
	      , #{imgUrl, jdbcType=VARCHAR}
	      , #{worker}
	      , DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
	    )
    ]]>
    </insert>
    <!-- 계약서 이미지 리스트  -->
  <select id="selectContImgList"  parameterType="hashmap" resultType="hashmap">
  <![CDATA[
    SELECT A.CO_NO, A.REG_DT, A.REG_TM, A.IMG_NM, A.IMG_URL, B.EMP_NM
 	FROM TB_CONT_IMG A LEFT OUTER JOIN TB_EMP B ON B.EMP_NO = A.WORKER
    WHERE CO_NO = #{coNo}
    ORDER BY A.REG_DT, A.REG_TM

    ]]>
  </select>
</mapper>