<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="purchaseMgmt">
	<!-- 매입 처리일 여부  -->
	<select id="selectAcqProcFlg" parameterType="hashmap" resultType="String">
	<![CDATA[
		SELECT
	      CASE WHEN OFFDAY_CD = '1' THEN 'Y' ELSE 'N' END AS DAY_CD
	    FROM TB_DAY
	    WHERE DAY = #{acqDt}
	]]>
	</select>
	<!--  매입검증   d-1 영업일-->
	<select id="selectAcqBizDay" parameterType="hashmap" resultType="String">
	<![CDATA[
		SELECT FN_BIZDAY(#{acqDt}, -1) AS ACQUDT FROM DUAL
	]]>
	</select>
	<!-- 매입 검증 - 거래일자  -->
	<select id="selectAcqTransDay" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
	      CASE WHEN OFFDAY_CD = '1'
	      THEN DAY
	      ELSE TO_CHAR(TO_DATE(DAY)+1, 'YYYYMMDD')
	      END FR_DT,
	      TO_CHAR(TO_DATE(#{acqDt})-1, 'YYYYMMDD') TO_DT
	    FROM TB_DAY
	    WHERE DAY = #{bizDay}
	]]>
	</select>
	<!-- 매입 검증 - 거래내역 -->
	<select id="selectAcqVerifyTrans" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		  SELECT
		  	SUM(A.CNT_AUTO_KEYIN) CNT_AUTO_KEYIN,    SUM(A.AMT_AUTO_KEYIN) AMT_AUTO_KEYIN,
           	SUM(A.CNT_AUTO_ISP) CNT_AUTO_ISP,        SUM(A.AMT_AUTO_ISP) AMT_AUTO_ISP,
           	SUM(A.CNT_AUTO_VISA3D) CNT_AUTO_VISA3D,  SUM(A.AMT_AUTO_VISA3D) AMT_AUTO_VISA3D,
           	SUM(A.CNT_AUTO_BILLKEYIN) CNT_AUTO_BILL_KEYIN,  SUM(A.AMT_AUTO_BILLKEYIN) AMT_AUTO_BILL_KEYIN,
           	SUM(A.CNT_AUTO_UPOP) CNT_AUTO_UPOP,  SUM(A.AMT_AUTO_UPOP) AMT_AUTO_UPOP,
           	SUM(A.CNT_REQ_KEYIN) CNT_REQ_KEYIN,      SUM(A.AMT_REQ_KEYIN) AMT_REQ_KEYIN,
           	SUM(A.CNT_REQ_ISP) CNT_REQ_ISP,          SUM(A.AMT_REQ_ISP) AMT_REQ_ISP,
           	SUM(A.CNT_REQ_VISA3D) CNT_REQ_VISA3D,    SUM(A.AMT_REQ_VISA3D) AMT_REQ_VISA3D,
           	SUM(A.CNT_REQ_BILLKEYIN) CNT_REQ_BILL_KEYIN,    SUM(A.AMT_REQ_BILLKEYIN) AMT_REQ_BILL_KEYIN,
           	SUM(A.CNT_REQ_UPOP) CNT_REQ_UPOP,    SUM(A.AMT_REQ_UPOP) AMT_REQ_UPOP,
           	SUM(A.CNT_CAN_KEYIN) CNT_CAN_KEYIN,      SUM(A.AMT_CAN_KEYIN) AMT_CAN_KEYIN,
           	SUM(A.CNT_CAN_ISP) CNT_CAN_ISP,          SUM(A.AMT_CAN_ISP) AMT_CAN_ISP,
           	SUM(A.CNT_CAN_VISA3D) CNT_CAN_VISA3D,    SUM(A.AMT_CAN_VISA3D) AMT_CAN_VISA3D,
           	SUM(A.CNT_CAN_BILLKEYIN) CNT_CAN_BILL_KEYIN,    SUM(A.AMT_CAN_BILLKEYIN) AMT_CAN_BILL_KEYIN,
	        SUM(A.CNT_CAN_UPOP) CNT_CAN_UPOP,    SUM(A.AMT_CAN_UPOP) AMT_CAN_UPOP
	    FROM
	    (
	      	SELECT
      			COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN 1 ELSE 0 END), 0) CNT_AUTO_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN 1 ELSE 0 END), 0) CNT_AUTO_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN 1 ELSE 0 END), 0) CNT_AUTO_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_VISA3D,
	    		COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN 1 ELSE 0 END), 0) CNT_AUTO_BILLKEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_BILLKEYIN,
	    		COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN 1 ELSE 0 END), 0) CNT_AUTO_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_UPOP,
	            0 CNT_REQ_KEYIN, 0 AMT_REQ_KEYIN, 0 CNT_REQ_ISP, 0 AMT_REQ_ISP, 0 CNT_REQ_VISA3D, 0 AMT_REQ_VISA3D, 0 CNT_REQ_BILLKEYIN, 0 AMT_REQ_BILLKEYIN, 0 CNT_REQ_UPOP, 0 AMT_REQ_UPOP,
	            0 CNT_CAN_KEYIN, 0 AMT_CAN_KEYIN, 0 CNT_CAN_ISP, 0 AMT_CAN_ISP, 0 CNT_CAN_VISA3D, 0 AMT_CAN_VISA3D, 0 CNT_CAN_BILLKEYIN, 0 AMT_CAN_BILLKEYIN, 0 CNT_CAN_UPOP, 0 AMT_CAN_UPOP
	      FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
	      WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
	      AND C.TRX_ST_CD IN ('0', '2')
	      AND A.MBS_TYPE_CD != '1'
	      AND B.MID = C.MID
	      AND B.ACQ_CL_CD = '0'
	      AND A.TID = C.OTID

	      UNION ALL

	      SELECT
	      		COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN 1 ELSE 0 END), 0) CNT_AUTO_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN 1 ELSE 0 END), 0) CNT_AUTO_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN 1 ELSE 0 END), 0) CNT_AUTO_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_VISA3D,
	    		COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN 1 ELSE 0 END), 0) CNT_AUTO_BILL_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_BILL_KEYIN,
	    		COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN 1 ELSE 0 END), 0) CNT_AUTO_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_AUTO_UPOP,
	            0 CNT_REQ_KEYIN, 0 AMT_REQ_KEYIN, 0 CNT_REQ_ISP, 0 AMT_REQ_ISP, 0 CNT_REQ_VISA3D, 0 AMT_REQ_VISA3D, 0 CNT_REQ_BILL_KEYIN, 0 AMT_REQ_BILL_KEYIN, 0 CNT_REQ_UPOP, 0 AMT_REQ_UPOP,
	            0 CNT_CAN_KEYIN, 0 AMT_CAN_KEYIN, 0 CNT_CAN_ISP, 0 AMT_CAN_ISP, 0 CNT_CAN_VISA3D, 0 AMT_CAN_VISA3D, 0 CNT_CAN_BILL_KEYIN, 0 AMT_CAN_BILL_KEYIN, 0 CNT_CAN_UPOP, 0 AMT_CAN_UPOP
	      FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
	      WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
	      AND C.TRX_ST_CD IN ('0', '2')
	      AND A.MBS_TYPE_CD = '1'
	      AND B.MID = C.MID
	      AND B.ACQ_CL_CD != '99'
	      AND A.TID = C.OTID

	      UNION ALL

	      SELECT
	      		0 CNT_AUTO_KEYIN, 0 AMT_AUTO_KEYIN, 0 CNT_AUTO_ISP, 0 AMT_AUTO_ISP, 0 CNT_AUTO_VISA3D, 0 AMT_AUTO_VISA3D, 0 CNT_AUTO_BILL_KEYIN, 0 AMT_AUTO_BILL_KEYIN, 0 CNT_AUTO_UPOP, 0 AMT_AUTO_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN 1 ELSE 0 END), 0) CNT_REQ_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_REQ_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN 1 ELSE 0 END), 0) CNT_REQ_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_REQ_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN 1 ELSE 0 END), 0) CNT_REQ_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_REQ_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN 1 ELSE 0 END), 0) CNT_REQ_BILL_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_REQ_BILL_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN 1 ELSE 0 END), 0) CNT_REQ_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_REQ_UPOP,
	            0 CNT_CAN_KEYIN, 0 AMT_CAN_KEYIN, 0 CNT_CAN_ISP, 0 AMT_CAN_ISP, 0 CNT_CAN_VISA3D, 0 AMT_CAN_VISA3D, 0 CNT_CAN_BILL_KEYIN, 0 AMT_CAN_BILL_KEYIN, 0 CNT_CAN_UPOP, 0 AMT_CAN_UPOP
	      FROM TB_ACQ_REQ A
	      WHERE A.ACQ_REQ_DT BETWEEN #{frDt} AND #{toDt}
	      AND A.ST_TYPE = '1'

	      UNION ALL

	      SELECT
	      		0 CNT_AUTO_KEYIN, 0 AMT_AUTO_KEYIN, 0 CNT_AUTO_ISP, 0 AMT_AUTO_ISP, 0 CNT_AUTO_VISA3D, 0 AMT_AUTO_VISA3D, 0 CNT_AUTO_BILL_KEYIN, 0 AMT_AUTO_BILL_KEYIN, 0 CNT_AUTO_UPOP, 0 AMT_AUTO_UPOP,
	            0 CNT_REQ_KEYIN, 0 AMT_REQ_KEYIN, 0 CNT_REQ_ISP, 0 AMT_REQ_ISP, 0 CNT_REQ_VISA3D, 0 AMT_REQ_VISA3D, 0 CNT_REQ_BILL_KEYIN, 0 AMT_REQ_BILL_KEYIN,  0 CNT_REQ_UPOP, 0 AMT_REQ_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN 1 ELSE 0 END), 0) CNT_CAN_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CAN_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN 1 ELSE 0 END), 0) CNT_CAN_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CAN_ISP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN 1 ELSE 0 END), 0) CNT_CAN_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CAN_VISA3D,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN 1 ELSE 0 END), 0) CNT_CAN_BILL_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CAN_BILL_KEYIN,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN 1 ELSE 0 END), 0) CNT_CAN_UPOP,
	            COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CAN_UPOP
	      FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
	      WHERE C.CC_DT BETWEEN #{frDt} AND #{toDt}
	      AND C.MID = B.MID
	      AND C.TRX_ST_CD = '2'
	      AND B.ACQ_CL_CD != '99'
	    ) A
	]]>
	</select>
	<!--  매입 검증 예외 내역-->
	<select id="selectAcqException" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	    SELECT COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_APP_IN_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_APP_IN_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_CC_IN_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CC_IN_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_APP_OUT_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_APP_OUT_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_CC_OUT_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_CC_OUT_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_APP_IN_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_APP_IN_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_CC_IN_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CC_IN_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_APP_OUT_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_APP_OUT_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_CC_OUT_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_CC_OUT_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_APP_IN_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_APP_IN_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_CC_IN_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CC_IN_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_APP_OUT_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_APP_OUT_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_CC_OUT_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_CC_OUT_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_APP_IN_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_APP_IN_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_CC_IN_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CC_IN_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_APP_OUT_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_APP_OUT_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_CC_OUT_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_CC_OUT_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_APP_IN_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_APP_IN_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN 1 ELSE 0 END), 0) CNT_CC_IN_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '0' THEN C.GOODS_AMT ELSE 0 END), 0) AMT_CC_IN_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_APP_OUT_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_APP_OUT_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1 ELSE 0 END), 0) CNT_CC_OUT_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' AND A.EXPT_TYPE = '1' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_CC_OUT_UPOP
	    FROM TB_EXCP_TID A, TB_CARD_TRX B, TB_MSTR_TRX C
	    WHERE A.EXPT_DT = #{acqDt}
	    AND B.TID = A.TID
	    AND C.TID = A.OTID
	]]>
	</select>
	<!-- 매입검증 - 취소매입보류내역  -->
	<select id="selectAcqCanResr" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
			SELECT
			   COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' THEN -1 ELSE 0 END), 0) CNT_HOLD_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '01' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_HOLD_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' THEN -1 ELSE 0 END), 0) CNT_HOLD_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '02' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_HOLD_ISP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' THEN -1 ELSE 0 END), 0) CNT_HOLD_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '03' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_HOLD_VISA3D,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' THEN -1 ELSE 0 END), 0) CNT_HOLD_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '04' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_HOLD_BILL_KEYIN,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' THEN -1 ELSE 0 END), 0) CNT_HOLD_UPOP,
	           COALESCE(SUM(CASE WHEN B.AUTH_TYPE_CD = '06' THEN -1*C.GOODS_AMT ELSE 0 END), 0) AMT_HOLD_UPOP
		    FROM TB_ACQ_HOLD A, TB_CARD_TRX B, TB_MSTR_TRX C
		    WHERE A.HOLD_DT BETWEEN #{frDt} AND #{toDt}
		    AND A.ST_TYPE = '0'
		    AND B.TID = A.TID
		    AND B.TID = C.OTID
	]]>
	</select>
	<!-- 매입검증 - 재매입 내역  -->
	<select id="selectAcqRetry" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_RE_APP_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_APP_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_RE_CC_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_CC_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_RE_APP_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_APP_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_RE_CC_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_CC_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_RE_APP_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_APP_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_RE_CC_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_CC_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_RE_APP_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_APP_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_RE_CC_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_CC_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_RE_APP_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_APP_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_RE_CC_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' THEN A.ACQ_AMT ELSE 0 END), 0) AMT_RE_CC_UPOP
	    FROM TB_RE_ACQ A
	    WHERE A.REA_DT BETWEEN #{frDt} AND #{toDt}
	]]>
	</select>
	<!-- 매입검증 - 매입생성내역 -->
	<select id="selectAcqList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_APP_ACQ_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '0' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_APP_ACQ_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_CC_ACQ_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '01' AND A.TRX_ST_CD = '2' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_CC_ACQ_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_APP_ACQ_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '0' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_APP_ACQ_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_CC_ACQ_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '02' AND A.TRX_ST_CD = '2' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_CC_ACQ_ISP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_APP_ACQ_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '0' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_APP_ACQ_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_CC_ACQ_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '03' AND A.TRX_ST_CD = '2' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_CC_ACQ_VISA3D,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_APP_ACQ_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '0' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_APP_ACQ_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_CC_ACQ_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '04' AND A.TRX_ST_CD = '2' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_CC_ACQ_BILL_KEYIN,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' THEN 1 ELSE 0 END), 0) CNT_APP_ACQ_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '0' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_APP_ACQ_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' THEN 1 ELSE 0 END), 0) CNT_CC_ACQ_UPOP,
           COALESCE(SUM(CASE WHEN A.AUTH_TYPE_CD = '06' AND A.TRX_ST_CD = '2' THEN A.GOODS_AMT ELSE 0 END), 0) AMT_CC_ACQ_UPOP
	    FROM TB_ACQ A
	    WHERE A.ACQ_DT = #{acqDt}
	]]>
	</select>
	<!-- 매입검증 - 차이건 리스트  -->
	<select id="selectAcqGap" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT * FROM
		(
		  SELECT
		  	ROWNUM AS RNUM,
		  	CASE WHEN A.GAP_CL = '0' THEN '생성' ELSE '누락' END GAP_CL,
           	CASE WHEN A.TRX_ST_CD = '0' THEN '승인' ELSE '취소' END STATE_NM,
           	A.TID, A.ACQ_AMT, A.ACQ_REG_CD
	      FROM
	      (
		      SELECT '0' GAP_CL, X.TRX_ST_CD, X.TID, X.ACQ_AMT, X.ACQ_REG_CD
		      FROM TB_ACQ X
		      WHERE X.ACQ_DT = #{acqDt}
		      AND NOT EXISTS
		      (
			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD IN ('0','2')
			        AND C.TRX_CD != '1'
			        AND B.MID = C.MID
			        AND B.ACQ_CL_CD = '0'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD IN ('0','2')
			        AND C.TRX_CD = '1'
			        AND B.MID = C.MID
			        AND B.ACQ_CL_CD != '99'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_ACQ_REQ A
			        WHERE A.ACQ_REQ_DT BETWEEN #{frDt} AND #{toDt}
			        AND A.ST_TYPE = '1'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.CC_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD = '2'
			        AND B.MID = C.MID
			        AND A.TID = X.TID
			        AND C.TRX_ST_CD = X.TRX_ST_CD
			        AND B.ACQ_CL_CD !='99'

			        UNION ALL

			        SELECT 1
			        FROM TB_EXCP_TID A
			        WHERE A.EXPT_DT = #{acqDt}
			        AND A.EXPT_TYPE = '0'
			        AND A.TID = X.TID
			        AND A.TRX_ST_CD = X.TRX_ST_CD

			        UNION ALL

			        SELECT 1
			        FROM TB_RE_ACQ A
			        WHERE A.REA_DT BETWEEN #{frDt} AND #{toDt}
			        AND A.TID = X.TID
			        AND A.TRX_ST_CD = X.TRX_ST_CD
		      )
		      UNION ALL

		      SELECT '1' GAP_CL, Y.TRX_ST_CD, Y.TID, Y.ACQ_AMT, '' ACQ_REG_CD
		      FROM
		      (
		          SELECT CASE WHEN A.TID = C.OTID THEN A.TID ELSE C.OTID END TID, '0' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
		          AND C.TRX_ST_CD IN ('0','2')
		          AND C.TRX_CD != '1'
		          AND B.MID = C.MID
		          AND B.ACQ_CL_CD = '0'

		          UNION ALL

		          SELECT CASE WHEN A.TID = C.OTID THEN A.TID ELSE C.OTID END TID, '0' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
		          AND C.TRX_ST_CD IN ('0','2')
		          AND C.TRX_CD = '1'
		          AND B.MID = C.MID
		          AND B.ACQ_CL_CD != '99'

		          UNION ALL

		          SELECT TID, '0' TRX_ST_CD, GOODS_AMT ACQ_AMT
		          FROM TB_ACQ_REQ
		          WHERE ACQ_REQ_DT BETWEEN #{frDt} AND #{toDt}
		          AND ST_TYPE = '1'

		          UNION ALL

		          SELECT A.TID, '2' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE CC_DT BETWEEN #{frDt} AND #{toDt}
		          AND TRX_ST_CD = '2'
		          AND C.MID = B.MID
		          AND B.ACQ_CL_CD !='99'

		          UNION ALL

		          SELECT A.TID, A.TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_EXCP_TID A, TB_CARD_TRX B, TB_MSTR_TRX C
		          WHERE A.EXPT_DT = #{acqDt}
		          AND A.EXPT_TYPE = '0'
		          AND B.TID = A.TID

		          UNION ALL

		          SELECT TID, TRX_ST_CD, ACQ_AMT
		          FROM TB_RE_ACQ
		          WHERE REA_DT BETWEEN #{frDt} AND #{toDt}
		        ) Y
		        WHERE NOT EXISTS
		          (
		            SELECT 1
		            FROM TB_ACQ X
		            WHERE X.ACQ_DT = #{acqDt}
		            AND X.TID = Y.TID
		            AND X.TRX_ST_CD = Y.TRX_ST_CD
		          )
		      ) A
	      ) TBL
	      WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
	]]>
	</select>
	<!-- 매입검증 - 차이건 리스트 갯수 -->
	<select id="selectAcqGapTotal" parameterType="hashmap" resultType="Integer">
	<![CDATA[
		  SELECT
		  	COUNT(1)
	      FROM
	      (
		      SELECT '0' GAP_CL, X.TRX_ST_CD, X.TID, X.ACQ_AMT, X.ACQ_REG_CD
		      FROM TB_ACQ X
		      WHERE X.ACQ_DT = #{acqDt}
		      AND NOT EXISTS
		      (
			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD IN ('0','2')
			        AND C.TRX_CD != '1'
			        AND B.MID = C.MID
			        AND B.ACQ_CL_CD = '0'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD IN ('0','2')
			        AND C.TRX_CD = '1'
			        AND B.MID = C.MID
			        AND B.ACQ_CL_CD != '99'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_ACQ_REQ A
			        WHERE A.ACQ_REQ_DT BETWEEN #{frDt} AND #{toDt}
			        AND A.ST_TYPE = '1'
			        AND A.TID = X.TID
			        AND X.TRX_ST_CD = '0'

			        UNION ALL

			        SELECT 1
			        FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
			        WHERE C.CC_DT BETWEEN #{frDt} AND #{toDt}
			        AND C.TRX_ST_CD = '2'
			        AND B.MID = C.MID
			        AND A.TID = X.TID
			        AND C.TRX_ST_CD = X.TRX_ST_CD
			        AND B.ACQ_CL_CD !='99'

			        UNION ALL

			        SELECT 1
			        FROM TB_EXCP_TID A
			        WHERE A.EXPT_DT = #{acqDt}
			        AND A.EXPT_TYPE = '0'
			        AND A.TID = X.TID
			        AND A.TRX_ST_CD = X.TRX_ST_CD

			        UNION ALL

			        SELECT 1
			        FROM TB_RE_ACQ A
			        WHERE A.REA_DT BETWEEN #{frDt} AND #{toDt}
			        AND A.TID = X.TID
			        AND A.TRX_ST_CD = X.TRX_ST_CD
		      )
		      UNION ALL

		      SELECT '1' GAP_CL, Y.TRX_ST_CD, Y.TID, Y.ACQ_AMT, '' ACQ_REG_CD
		      FROM
		      (
		          SELECT CASE WHEN A.TID = C.OTID THEN A.TID ELSE C.OTID END TID, '0' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
		          AND C.TRX_ST_CD IN ('0','2')
		          AND C.TRX_CD != '1'
		          AND B.MID = C.MID
		          AND B.ACQ_CL_CD = '0'

		          UNION ALL

		          SELECT CASE WHEN A.TID = C.OTID THEN A.TID ELSE C.OTID END TID, '0' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE C.APP_DT BETWEEN #{frDt} AND #{toDt}
		          AND C.TRX_ST_CD IN ('0','2')
		          AND C.TRX_CD = '1'
		          AND B.MID = C.MID
		          AND B.ACQ_CL_CD != '99'

		          UNION ALL

		          SELECT TID, '0' TRX_ST_CD, GOODS_AMT ACQ_AMT
		          FROM TB_ACQ_REQ
		          WHERE ACQ_REQ_DT BETWEEN #{frDt} AND #{toDt}
		          AND ST_TYPE = '1'

		          UNION ALL

		          SELECT A.TID, '2' TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_CARD_TRX A, TB_MBS B, TB_MSTR_TRX C
		          WHERE CC_DT BETWEEN #{frDt} AND #{toDt}
		          AND TRX_ST_CD = '2'
		          AND C.MID = B.MID
		          AND B.ACQ_CL_CD !='99'

		          UNION ALL

		          SELECT A.TID, A.TRX_ST_CD, C.GOODS_AMT ACQ_AMT
		          FROM TB_EXCP_TID A, TB_CARD_TRX B, TB_MSTR_TRX C
		          WHERE A.EXPT_DT = #{acqDt}
		          AND A.EXPT_TYPE = '0'
		          AND B.TID = A.TID

		          UNION ALL

		          SELECT TID, TRX_ST_CD, ACQ_AMT
		          FROM TB_RE_ACQ
		          WHERE REA_DT BETWEEN #{frDt} AND #{toDt}
		        ) Y
		        WHERE NOT EXISTS
		          (
		            SELECT 1
		            FROM TB_ACQ X
		            WHERE X.ACQ_DT = #{acqDt}
		            AND X.TID = Y.TID
		            AND X.TRX_ST_CD = Y.TRX_ST_CD
		          )
	      	) A
	]]>
	</select>
	<!-- 매입 검증 - van 생성내역 -->
	<select id="selectAcqCntOfVan" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
	      COALESCE(A.JTNET_CNT, 0) AS JTNET_CNT , A.JTNET_AMT,
	        COALESCE(
            DBMS_LOB.SUBSTR
            (
              (
                SELECT RSLT_MSG
                FROM TB_BATCH_JOB
                WHERE JOB_DT = #{acqDt}
                AND BATCH_ID = 'CREATE EDI FILE JTNET'
                AND JOB_ACTION = 'JTNETREQCNT'
                AND JOB_TM =
                (
                  SELECT MAX(JOB_TM)
                  FROM TB_BATCH_JOB
                  WHERE JOB_DT = #{acqDt}
                  AND BATCH_ID = 'CREATE EDI FILE JTNET'
                  AND JOB_ACTION = 'JTNETREQCNT'
                )
              ), 4000, 1)
          , 0) AS JTNET_SEND_CNT
	    FROM
	    (
	      SELECT
	        SUM(CASE WHEN ACQ_VAN_CD = '04' THEN 1 ELSE 0 END) JTNET_CNT,
	        NVL
	        (
	          SUM
	          (
	            CASE WHEN ACQ_VAN_CD = '04'
	            THEN
	              CASE WHEN TRX_ST_CD = '0'
	              THEN ACQ_AMT
	              ELSE -1*ACQ_AMT
	              END
	            END
	          ), 0) JTNET_AMT
	      FROM TB_ACQ
	      WHERE ACQ_DT = #{acqDt}
	    ) A
	]]>
	</select>
	<!-- 매입결과 리스트  -->
	<select id="selectAcqRsltList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT * FROM
		(
			SELECT
			   ROWNUM AS RNUM,
			   MBS_NO,
		       RECV_DT,
		       FN_NM_CODE1('CARD_CD', CARD_CO_NO) CARD_NM,
		       FN_NM_CODE1('VAN_CD', ACQ_VAN) VAN_NM,
		       RECV_CNT,
		       RECV_AMT,
		       RET_CNT,
		       RET_AMT,
		       RESR_CNT,
		       RESR_AMT,
		       RESC_CNT,
		       RESC_AMT,
		       STMT_CNT,
		       STMT_AMT,
		       CASE WHEN ACQ_FR_DT = ACQ_TO_DT THEN TO_CHAR(ACQ_FR_DT, 'YYYYMMDD')
	           ELSE (TO_CHAR(ACQ_FR_DT, 'YYYYMMDD') || '~' || TO_CHAR(ACQ_TO_DT, 'YYYYMMDD'))
		       END ACQ_DT,
		       FEE,
		       DPST_AMT,
		       DPST_DT
		    FROM TB_ACQ_RSLT
		    WHERE ACQ_FR_DT BETWEEN #{frDt} AND #{toDt}
		    ]]>
		    <if test="cardCd!='ALL'">
		    <![CDATA[
		    	AND CARD_CO_NO = #{cardCd}
		    ]]>
		    </if>
		    <if test="mbsNo!=null and mbsNo!=''">
		    <![CDATA[
		    	AND MBS_NO = #{mbsNo}
		    ]]>
	    	</if>
    	<![CDATA[
    		) TBL
    		WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
    	]]>
	</select>
	<select id="selectAcqRsltListTotal" parameterType="hashmap" resultType="integer">
	<![CDATA[
		SELECT COUNT(1)
	    FROM TB_ACQ_RSLT
	    WHERE ACQ_FR_DT BETWEEN #{frDt} AND #{toDt}
	    ]]>
	    <if test="cardCd!='ALL'">
	    <![CDATA[
	    	AND CARD_CO_NO = #{cardCd}
	    ]]>
	    </if>
	    <if test="mbsNo!=null and mbsNo!=''">
	    <![CDATA[
	    	AND MBS_NO = #{mbsNo}
	    ]]>
    	</if>
	</select>
	<!-- 매입 tid 리스트 -->
	<select id="selectAcqTidRsltList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			ROWNUM AS RNUM,
			A.MBS_NO,
	        FN_NM_CODE1('card_cd', A.ACQ_CARD_CD) CARD_NM,
	        A.ACQ_DT,
	        A.TID,
	        (MUL_VAL * A.ACQ_AMT) ACQ_AMT,
	        CASE WHEN MUL_VAL < 0
	        THEN '취소'
	        ELSE '승인'
	       	END STATE_NM,
	        (MUL_VAL * A.FEE) FEE,
	        (MUL_VAL * A.POINT_FEE) POINT_FEE,
	       	MUL_VAL*(A.ACQ_AMT - A.FEE) DPST_AMT,
	       	A.DPST_DT,
	       	A.STATUS,
	       	A.QUOTA_MON,
	       	A.OVER_FLG,
	       	A.OVER_FLG_NM,
	      	A.APP_NO,
	       	A.CHKCARD_FLG,
	       	FN_NM_CODE1('CHKCARD_FLG', A.CHKCARD_FLG) AS CHKCARD_FLG_NM
		 FROM
		 (
		      SELECT A.MBS_NO,
		             A.ACQ_CARD_CD,
		             A.ACQ_DT,
		             A.TID,
		             A.ACQ_AMT,
		             A.OVER_FLG,
		             A.APP_NO,
		             A.CHKCARD_FLG,
		             CASE WHEN A.TRX_ST_CD = '0'
		                    THEN '승인'
		                  ELSE '취소'
		             END STATE_NM,
		             CASE WHEN A.TRX_ST_CD = '0'
		                    THEN 1
		                  ELSE -1
		             END MUL_VAL,
		             FN_BASE_FEE(A.MID, A.ACQ_CARD_CD, A.NOINT_FLG, A.SPM_CD, A.MBS_NO, A.QUOTA_MON, A.APP_DT, A.ACQ_AMT, A.CHKCARD_FLG, A.OVER_FLG) FEE,
		             FN_BASE_POINT_FEE(A.MID, A.ACQ_CARD_CD, A.NOINT_FLG, A.SPM_CD, A.MBS_NO, A.QUOTA_MON, A.APP_DT, A.ACQ_AMT, A.CHKCARD_FLG, A.OVER_FLG) POINT_FEE,
		             FN_DEPOSIT_DAY(A.MBS_NO, A.ACQ_DT) DPST_DT,
		             CASE WHEN A.ACQ_RSLT_CD = '3' THEN '반송' ELSE '접수' END STATUS, A.QUOTA_MON,
		             CASE WHEN A.OVER_FLG = '0' THEN '국내'
		                  WHEN A.OVER_FLG = '2' THEN '은련'
		             ELSE '해외' END OVER_FLG_NM
		      FROM TB_ACQ A
		      WHERE A.ACQ_DT BETWEEN #{frDt} AND #{toDt}
		    ]]>
		    <if test="cardCd!='ALL'">
		    <![CDATA[
		    	AND ACQ_CARD_CD = #{cardCd}
		    ]]>
		    </if>
		    <if test="mbsNo!=null and mbsNo!=''">
		    <![CDATA[
		    	AND A.MBS_NO = #{mbsNo}
		    ]]>
		    </if>
		    <if test="status!='ALL'">
		    <![CDATA[
		    	AND COALESCE(A.ACQ_RSLT_CD, '0') = #{status}
		    ]]>
		    </if>
		    <if test="overCl!='ALL'">
		    <![CDATA[
		    	AND A.OVER_FLG = #{overCl}
		    ]]>
		    </if>
	      	<![CDATA[
		    ) A
		    ORDER BY A.ACQ_DT DESC
		    ]]>
	</select>
	<select id="selectAcqTidRsltListTotal" parameterType="hashmap" resultType="Integer">
	<![CDATA[
		SELECT
			COUNT(1)
		 FROM
		 (
		      SELECT A.MBS_NO,
		             A.ACQ_CARD_CD,
		             A.ACQ_DT,
		             A.TID,
		             A.ACQ_AMT,
		             A.OVER_FLG,
		             A.APP_NO,
		             A.CHKCARD_FLG,
		             CASE WHEN A.TRX_ST_CD = '0'
		                    THEN '승인'
		                  ELSE '취소'
		             END STATE_NM,
		             CASE WHEN A.TRX_ST_CD = '0'
		                    THEN 1
		                  ELSE -1
		             END MUL_VAL,
		             FN_BASE_FEE(A.MID, A.ACQ_CARD_CD, A.NOINT_FLG, A.SPM_CD, A.MBS_NO, A.QUOTA_MON, A.APP_DT, A.ACQ_AMT, A.CHKCARD_FLG, A.OVER_FLG) FEE,
		             FN_BASE_POINT_FEE(A.MID, A.ACQ_CARD_CD, A.NOINT_FLG, A.SPM_CD, A.MBS_NO, A.QUOTA_MON, A.APP_DT, A.ACQ_AMT, A.CHKCARD_FLG, A.OVER_FLG) POINT_FEE,
		             FN_DEPOSIT_DAY(A.MBS_NO, A.ACQ_DT) DPST_DT,
		             CASE WHEN A.ACQ_RSLT_CD = '3' THEN '반송' ELSE '접수' END STATUS, A.QUOTA_MON,
		             CASE WHEN A.OVER_FLG = '0' THEN '국내'
		                  WHEN A.OVER_FLG = '2' THEN '은련'
		             ELSE '해외' END OVER_FLG_NM
		      FROM TB_ACQ A
		      WHERE A.ACQ_DT BETWEEN #{frDt} AND #{toDt}
		    ]]>
		    <if test="cardCd!='ALL'">
		    <![CDATA[
		    	AND ACQ_CARD_CD = #{cardCd}
		    ]]>
		    </if>
		    <if test="mbsNo!=null and mbsNo!=''">
		    <![CDATA[
		    	AND A.MBS_NO = #{mbsNo}
		    ]]>
		    </if>
		    <if test="status!='ALL'">
		    <![CDATA[
		    	AND COALESCE(A.ACQ_RSLT_CD, '0') = #{status}
		    ]]>
		    </if>
		    <if test="overCl!='ALL'">
		    <![CDATA[
		    	AND A.OVER_FLG = #{overCl}
		    ]]>
		    </if>
	      	<![CDATA[
		    ) A
		    ORDER BY A.ACQ_DT DESC
		    ]]>
	</select>
	<select id="selectAcqTidRsltInfo" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT SUM(ROWCNT) TOTPAGECNT,
           SUM(A.APPCNT) APPCNT, SUM(A.APPAMT) APPAMT, SUM(A.CCCNT) CCCNT, SUM(A.CCAMT) CCAMT
	    FROM
	    (
		    SELECT COUNT(1) ROWCNT,
		          COUNT(1) APPCNT,
		        SUM(ACQ_AMT) APPAMT,
		        0  CCCNT,
		        0  CCAMT
		       FROM TB_ACQ
		       WHERE ACQ_DT BETWEEN #{frDt} AND #{toDt}
		       AND TRX_ST_CD = '0'


		   UNION ALL

	       SELECT COUNT(1) ROWCNT,
	             0 APPCNT,
	        0 APPAMT,
	        SUM(-1) CCCNT,
	        SUM(-1*ACQ_AMT) CCAMT
	       FROM TB_ACQ
	       WHERE ACQ_DT BETWEEN #{frDt} AND #{toDt}
	       AND TRX_ST_CD = '2'
	    ) A
	]]>
	</select>
	<!-- 반송리스트 -->
	<select id="selectAcqRetList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT * FROM
		(
		    SELECT
		    	ROWNUM AS RNUM, A.SEQ, A.ACQ_DT, CASE WHEN A.TRX_ST_CD = '0' THEN A.APP_DT ELSE A.CC_DT END TR_DT,
	          	A.RET_DT, FN_NM_CODE1('CARD_CD', A.ACQ_CARD_CD) CARD_NM, A.MBS_NO, A.TID,
	          	CASE WHEN A.TRX_ST_CD = '0' THEN A.ACQ_AMT ELSE -1*A.ACQ_AMT END ACQ_AMT,
	          	CASE WHEN A.TRX_ST_CD = '0' THEN '승인' ELSE '취소' END TRX_ST_NM,
	          	(SELECT COALESCE(X.DESC2, A.RET_CD) FROM TB_CODE X WHERE X.CODE_CL = '0058' AND X.CODE1 = A.ACQ_CARD_CD AND X.CODE2 = A.RET_CD) RET_CD,
	          	FN_NM_CODE1('RET_PROC_CD', A.RET_PROC_CD) RET_PROC_NM, A.RET_PROC_CD, A.RET_PROC_DESC, A.RET_PROC_DT
		    FROM TB_ACQ_RTN A, TB_MBS B
		    WHERE A.RET_DT BETWEEN #{retFrDt} AND #{retToDt}
		    AND A.ACQ_DT BETWEEN #{acqFrDt} AND #{acqToDt}
		    AND B.MID = A.MID
		    ]]>
		    <if test="joinType!='ALL'">
		    <![CDATA[
		    	AND B.MBS_TYPE_CD = #{joinType}
		    ]]>
		    </if>
		    <if test="cardCd!='ALL'">
		    <![CDATA[
		    	AND A.ACQ_CARD_CD = #{cardCd}
		    ]]>
		    </if>
		    <if test="mbsNo!=null and mbsNo!=''">
		    <![CDATA[
		    	AND A.MBS_NO = #{mbsNo}
		    ]]>
		    </if>
		    <if test="stateCd!='ALL'">
		    <![CDATA[
		    	AND A.TRX_ST_CD = #{stateCd}
		    ]]>
		    </if>
		    <if test="procCd!='ALL'">
		    <![CDATA[
		    	AND A.RET_PROC_CD = #{procCd}
		    ]]>
		    </if>
		    <if test=" tid!=null and tid!=''">
		    <![CDATA[
		    	AND A.TID = #{tid}
		    ]]>
		    </if>
		    <![CDATA[
		    ORDER BY A.RET_DT DESC
		) TBL
		WHERE RNUM BETWEEN  ${intPageStart} AND ${intPageEnd}
	]]>
	</select>
	<select id="selectAcqRetListTotal" parameterType="hashmap"  resultType="Integer">
	<![CDATA[
		SELECT
	    	COUNT(1)
	    FROM TB_ACQ_RTN A, TB_MBS B
	    WHERE A.RET_DT BETWEEN #{retFrDt} AND #{retToDt}
	    AND A.ACQ_DT BETWEEN #{acqFrDt} AND #{acqToDt}
	    AND B.MID = A.MID
	    ]]>
	    <if test="joinType!='ALL'">
	    <![CDATA[
	    	AND B.MBS_TYPE_CD = #{joinType}
	    ]]>
	    </if>
	    <if test="cardCd!='ALL'">
	    <![CDATA[
	    	AND A.ACQ_CARD_CD = #{cardCd}
	    ]]>
	    </if>
	    <if test="mbsNo!=null and mbsNo!=''">
	    <![CDATA[
	    	AND A.MBS_NO = #{mbsNo}
	    ]]>
	    </if>
	    <if test="stateCd!='ALL'">
	    <![CDATA[
	    	AND A.TRX_ST_CD = #{stateCd}
	    ]]>
	    </if>
	    <if test="procCd!='ALL'">
	    <![CDATA[
	    	AND A.RET_PROC_CD = #{procCd}
	    ]]>
	    </if>
	    <if test=" tid!=null and tid!=''">
	    <![CDATA[
	    	AND A.TID = #{tid}
	    ]]>
	    </if>
	</select>
	<!-- 반송처리 -->
	<update id="updateRetProc" parameterType="hashmap">
	<![CDATA[
		UPDATE TB_ACQ_RTN
		SET
			RET_PROC_CD = #{procCd}
			, RET_PROC_DESC = #{procDesc}
			, RET_PROC_DT = DATE_FORMAT(NOW(), "%Y%m%d")
			, DPST_REPORT_FLG =#{appDepReport}
			, UPD_DNT = DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
		WHERE
			SEQ = #{seq}
	]]>
	</update>
	<!--  재매입일 경우 재매입 처리 -->
	<insert id="insertProcRetReAcq" parameterType="hashmap">
	<![CDATA[
		INSERT INTO TB_RE_ACQ
		(
			SEQ
			,MID
			,GID
			,VID
			,TID
			,PM_CD
			,SPM_CD
			,REA_DT
			,REA_TM
			,APP_DT
			,CC_DT
			,TRX_ST_CD
			,ACQ_CARD_CD
			,MBS_NO
			,CHKCARD_FLG
			,CARD_NO
			,CARD_NO_ENC
			,NOINT_FLG
			,APP_NO
			,EXPIRE_YYMM
			,EXPIRE_YYMM_ENC
			,QUOTA_MON
			,ACQ_AMT
			,ACQ_VAN
			,AUTH_TYPE_CD
			,RET_ACQ_SEQ
			,OTID
			,WORKER
			,REG_DNT
		)
		SELECT
			SEQ_RE_ACQ.NEXTVAL
			, A.MID
			, A.GID
			, A.VID
			, A.TID
			, PM_CD
			, SPM_CD
			, DATE_FORMAT(NOW(), "%Y%m%d")
			, DATE_FORMAT(NOW(), "%H%i%s")
			, A.APP_DT
			, A.CC_DT
			, A.TRX_ST_CD
			, A.ACQ_CARD_CD
			, A.MBS_NO
			, A.CHKCARD_FLG
			, A.CARD_NO
			, A.CARD_NO_ENC
			, A.NOINT_FLG
			, A.APP_NO
			, A.EXPIRE_YYMM
			, A.EXPIRE_YYMM_ENC
			, A.QUOTA_MON
			, A.ACQ_AMT
			, A.ACQ_VAN
			, A.AUTH_TYPE_CD
			, A.SEQ
			, A.OTID
			, #{worker}
			, DATE_FORMAT(NOW(), "%Y%m%d%H%i%s")
		FROM TB_ACQ_RTN
		WHERE A.SEQ = #{seq}
	]]>
	</insert>
</mapper>